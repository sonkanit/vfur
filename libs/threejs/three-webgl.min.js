// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE={REVISION:"65"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,e=c.length;d<e;d++){var f=c[d];Object.defineProperty(a,f,Object.getOwnPropertyDescriptor(b,f))}else for(f in c={}.hasOwnProperty,b)c.call(b,f)&&(a[f]=b[f]);return a};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),h=self.setTimeout(function(){b(c+f)},f);a=c+f;return h});void 0===self.cancelAnimationFrame&&void 0!==
self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;
THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;
THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;
THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;
THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
c:0.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a},b=0.5>=c?c*(1+b):c+b-c*b,c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){var a=a||{h:0,s:0,l:0},b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),h,j=(f+e)/2;if(f===e)f=h=0;else{var k=e-f,f=0.5>=j?k/(e+f):k/(2-e-f);switch(e){case b:h=(c-d)/k+(c<d?6:0);break;case c:h=(d-b)/k+2;break;case d:h=(b-c)/k+4}h/=6}a.h=h;a.s=f;a.l=j;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a;this._updateEuler()},get y(){return this._y},set y(a){this._y=a;this._updateEuler()},get z(){return this._z},set z(a){this._z=a;this._updateEuler()},get w(){return this._w},set w(a){this._w=a;this._updateEuler()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;
this._updateEuler();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._w=a._w;this._updateEuler();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),h=Math.sin(a._y/2),j=Math.sin(a._z/2);"XYZ"===a.order?(this._x=f*d*e+c*h*j,this._y=c*h*
e-f*d*j,this._z=c*d*j+f*h*e,this._w=c*d*e-f*h*j):"YXZ"===a.order?(this._x=f*d*e+c*h*j,this._y=c*h*e-f*d*j,this._z=c*d*j-f*h*e,this._w=c*d*e+f*h*j):"ZXY"===a.order?(this._x=f*d*e-c*h*j,this._y=c*h*e+f*d*j,this._z=c*d*j+f*h*e,this._w=c*d*e-f*h*j):"ZYX"===a.order?(this._x=f*d*e-c*h*j,this._y=c*h*e+f*d*j,this._z=c*d*j-f*h*e,this._w=c*d*e+f*h*j):"YZX"===a.order?(this._x=f*d*e+c*h*j,this._y=c*h*e+f*d*j,this._z=c*d*j-f*h*e,this._w=c*d*e-f*h*j):"XZY"===a.order&&(this._x=f*d*e-c*h*j,this._y=c*h*e-f*d*j,this._z=
c*d*j+f*h*e,this._w=c*d*e+f*h*j);!1!==b&&this._updateEuler();return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this._updateEuler();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],h=b[9],j=b[2],k=b[6],b=b[10],m=c+f+b;0<m?(c=0.5/Math.sqrt(m+1),this._w=0.25/c,this._x=(k-h)*c,this._y=(d-j)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-h)/c,this._x=0.25*c,
this._y=(a+e)/c,this._z=(d+j)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-j)/c,this._x=(a+e)/c,this._y=0.25*c,this._z=(h+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+j)/c,this._y=(h+k)/c,this._z=0.25*c);this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*
this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=
a._w,h=b._x,j=b._y,k=b._z,m=b._w;this._x=c*m+f*h+d*k-e*j;this._y=d*m+f*j+e*h-c*k;this._z=e*m+f*k+c*j-d*h;this._w=f*m-c*h-d*j-e*k;this._updateEuler();return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,h=f*a._w+c*a._x+d*a._y+e*a._z;0>h?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=
-a._z,h=-h):this.copy(a);if(1<=h)return this._w=f,this._x=c,this._y=d,this._z=e,this;var j=Math.acos(h),k=Math.sqrt(1-h*h);if(0.001>Math.abs(k))return this._w=0.5*(f+this._w),this._x=0.5*(c+this._x),this._y=0.5*(d+this._y),this._z=0.5*(e+this._z),this;h=Math.sin((1-b)*j)/k;j=Math.sin(b*j)/k;this._w=f*h+this._w*j;this._x=c*h+this._x*j;this._y=d*h+this._y*j;this._z=e*h+this._z*j;this._updateEuler();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},
fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];this._w=a[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=
a.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);
return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){this.x=a[0];this.y=a[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);
this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,h=a.z,a=a.w,j=a*b+f*d-h*c,k=a*c+h*b-e*d,m=a*d+e*c-f*b,b=-e*b-f*c-h*d;this.x=j*a+b*-e+k*-h-m*-f;this.y=k*a+b*-f+m*-e-j*-h;this.z=m*a+b*-h+j*-f-k*-e;return this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*
b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<
a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=
a.x,d=a.y,e=a.z,f=b.x,h=b.y,j=b.z;this.x=d*j-e*h;this.y=e*f-c*j;this.z=c*h-d*f;return this},angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},
setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");
return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),
a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};
THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var a=new THREE.Quaternion;return function(b){!1===b instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion;return function(b,c){this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),projectOnVector:function(){var a=new THREE.Vector3;
return function(b){a.copy(b).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b).multiplyScalar(2);return this.subVectors(a,this)}}()});THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},
applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,
this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],h=a[1],j=a[5],k=a[9];c=a[2];b=a[6];var m=a[10];if(0.01>Math.abs(d-h)&&0.01>Math.abs(f-c)&&0.01>Math.abs(k-b)){if(0.1>Math.abs(d+h)&&0.1>Math.abs(f+c)&&0.1>Math.abs(k+b)&&0.1>Math.abs(e+j+m-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;j=(j+1)/2;m=(m+1)/2;d=(d+h)/4;f=(f+c)/4;k=(k+b)/4;e>j&&e>m?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):j>m?0.01>j?
(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(j),b=d/c,d=k/c):0.01>m?(c=b=0.707106781,d=0):(d=Math.sqrt(m),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(h-d)*(h-d));0.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(f-c)/a;this.z=(h-d)/a;this.w=Math.acos((e+j+m-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=
a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&
a.w===this.w},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];this.w=a[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a;this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a;this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a;this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a;this._updateQuaternion()},
set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this._updateQuaternion();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this._updateQuaternion();return this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],h=d[8],j=d[1],k=d[5],m=d[9],q=d[2],t=d[6],d=d[10],b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(h)),0.99999>Math.abs(h)?(this._x=Math.atan2(-m,d),this._z=
Math.atan2(-f,e)):(this._x=Math.atan2(t,k),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(m)),0.99999>Math.abs(m)?(this._y=Math.atan2(h,d),this._z=Math.atan2(j,k)):(this._y=Math.atan2(-q,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(t)),0.99999>Math.abs(t)?(this._y=Math.atan2(-q,d),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(j,e))):"ZYX"===b?(this._y=Math.asin(-c(q)),0.99999>Math.abs(q)?(this._x=Math.atan2(t,d),this._z=Math.atan2(j,e)):(this._x=0,this._z=Math.atan2(-f,k))):"YZX"===b?(this._z=
Math.asin(c(j)),0.99999>Math.abs(j)?(this._x=Math.atan2(-m,k),this._y=Math.atan2(-q,e)):(this._x=0,this._y=Math.atan2(h,d))):"XZY"===b?(this._z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this._x=Math.atan2(t,k),this._y=Math.atan2(h,e)):(this._x=Math.atan2(-m,d),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b);this._order=b;this._updateQuaternion();return this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=
a.y*a.y,h=a.z*a.z,j=a.w*a.w,b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),j-e-f+h),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),j+e-f-h)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),j-e-f+h),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),j-e+f-h)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),j-e-f+h),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),j-e+f-h)):"ZYX"===
b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),j-e-f+h),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),j+e-f-h)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),j-e+f-h),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),j+e-f-h),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),j-e+f-h),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),j+e-f-h),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+
b);this._order=b;!1!==c&&this._updateQuaternion();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,
this._y,this._z,this._order)}};THREE.Matrix3=function(a,b,c,d,e,f,h,j,k){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,h||0,j||0,void 0!==k?k:1)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,h,j,k){var m=this.elements;m[0]=a;m[3]=b;m[6]=c;m[1]=d;m[4]=e;m[7]=f;m[2]=h;m[5]=j;m[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],h=a[5],j=a[6],k=a[7],a=a[8];return b*f*a-b*h*k-c*e*a+c*h*j+d*e*k-d*f*j},getInverse:function(a,
b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/
c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],
a[6],a[7],a[8]]},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};THREE.Matrix4=function(a,b,c,d,e,f,h,j,k,m,q,t,z,u,r,n){var p=this.elements=new Float32Array(16);p[0]=void 0!==a?a:1;p[4]=b||0;p[8]=c||0;p[12]=d||0;p[1]=e||0;p[5]=void 0!==f?f:1;p[9]=h||0;p[13]=j||0;p[2]=k||0;p[6]=m||0;p[10]=void 0!==q?q:1;p[14]=t||0;p[3]=z||0;p[7]=u||0;p[11]=r||0;p[15]=void 0!==n?n:1};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,h,j,k,m,q,t,z,u,r,n){var p=this.elements;p[0]=a;p[4]=b;p[8]=c;p[12]=d;p[1]=e;p[5]=f;p[9]=h;p[13]=j;p[2]=k;p[6]=m;p[10]=q;p[14]=t;p[3]=z;p[7]=u;p[11]=r;p[15]=n;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(a)},copyPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,b=b.elements,d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===
a instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),h=Math.cos(d),d=Math.sin(d),j=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){var a=f*j,k=f*e,m=c*j,q=c*e;b[0]=h*j;b[4]=-h*e;b[8]=d;b[1]=k+m*d;b[5]=a-q*d;b[9]=-c*h;b[2]=q-a*d;b[6]=m+k*d;b[10]=f*h}else"YXZ"===a.order?(a=h*j,k=h*e,m=d*j,q=d*e,b[0]=a+q*c,b[4]=m*c-k,b[8]=
f*d,b[1]=f*e,b[5]=f*j,b[9]=-c,b[2]=k*c-m,b[6]=q+a*c,b[10]=f*h):"ZXY"===a.order?(a=h*j,k=h*e,m=d*j,q=d*e,b[0]=a-q*c,b[4]=-f*e,b[8]=m+k*c,b[1]=k+m*c,b[5]=f*j,b[9]=q-a*c,b[2]=-f*d,b[6]=c,b[10]=f*h):"ZYX"===a.order?(a=f*j,k=f*e,m=c*j,q=c*e,b[0]=h*j,b[4]=m*d-k,b[8]=a*d+q,b[1]=h*e,b[5]=q*d+a,b[9]=k*d-m,b[2]=-d,b[6]=c*h,b[10]=f*h):"YZX"===a.order?(a=f*h,k=f*d,m=c*h,q=c*d,b[0]=h*j,b[4]=q-a*e,b[8]=m*e+k,b[1]=e,b[5]=f*j,b[9]=-c*j,b[2]=-d*j,b[6]=k*e+m,b[10]=a-q*e):"XZY"===a.order&&(a=f*h,k=f*d,m=c*h,q=c*d,b[0]=
h*j,b[4]=-e,b[8]=d*j,b[1]=a*e+q,b[5]=f*j,b[9]=k*e-m,b[2]=m*e-k,b[6]=c*j,b[10]=q*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,h=c+c,j=d+d,k=e+e,a=c*h,m=c*j,c=
c*k,q=d*j,d=d*k,e=e*k,h=f*h,j=f*j,f=f*k;b[0]=1-(q+e);b[4]=m-f;b[8]=c+j;b[1]=m+f;b[5]=1-(a+e);b[9]=d-h;b[2]=c-j;b[6]=d+h;b[10]=1-(a+q);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var h=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);h[0]=a.x;
h[4]=b.x;h[8]=c.x;h[1]=a.y;h[5]=b.y;h[9]=c.y;h[2]=a.z;h[6]=b.z;h[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],h=c[4],j=c[8],k=c[12],m=c[1],q=c[5],t=c[9],z=c[13],u=c[2],r=c[6],n=c[10],p=c[14],l=c[3],i=c[7],s=c[11],c=c[15],
B=d[0],C=d[4],G=d[8],x=d[12],M=d[1],y=d[5],H=d[9],K=d[13],w=d[2],N=d[6],D=d[10],L=d[14],v=d[3],F=d[7],aa=d[11],d=d[15];e[0]=f*B+h*M+j*w+k*v;e[4]=f*C+h*y+j*N+k*F;e[8]=f*G+h*H+j*D+k*aa;e[12]=f*x+h*K+j*L+k*d;e[1]=m*B+q*M+t*w+z*v;e[5]=m*C+q*y+t*N+z*F;e[9]=m*G+q*H+t*D+z*aa;e[13]=m*x+q*K+t*L+z*d;e[2]=u*B+r*M+n*w+p*v;e[6]=u*C+r*y+n*N+p*F;e[10]=u*G+r*H+n*D+p*aa;e[14]=u*x+r*K+n*L+p*d;e[3]=l*B+i*M+s*w+c*v;e[7]=l*C+i*y+s*N+c*F;e[11]=l*G+i*H+s*D+c*aa;e[15]=l*x+i*K+s*L+c*d;return this},multiplyToArray:function(a,
b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
a.transformDirection(this)},crossVector:function(a){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],h=a[5],j=a[9],k=a[13],m=a[2],q=a[6],t=a[10],z=a[14];return a[3]*(+e*j*q-d*k*q-e*h*t+c*k*t+d*h*z-c*j*z)+a[7]*(+b*j*z-b*k*t+e*f*t-d*f*z+d*k*m-e*j*m)+a[11]*(+b*k*q-b*h*z-e*f*q+c*f*z+e*h*m-c*k*m)+a[15]*(-d*h*m-b*j*q+b*h*t+d*f*q-c*f*
t+c*j*m)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;
a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;
b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],h=d[8],j=d[12],k=d[1],m=d[5],q=d[9],t=d[13],z=d[2],u=d[6],r=d[10],n=d[14],p=d[3],l=d[7],i=d[11],d=d[15];c[0]=q*n*l-t*r*l+t*u*i-m*n*i-q*u*d+m*r*d;c[4]=j*r*l-h*n*l-j*u*i+f*n*i+h*u*d-f*r*d;c[8]=h*t*l-j*q*l+j*m*i-f*t*i-h*m*d+f*q*d;c[12]=j*q*u-h*t*u-j*m*r+f*t*r+h*m*n-f*q*n;c[1]=t*r*p-q*n*p-t*z*i+k*n*i+q*z*d-k*r*d;c[5]=h*n*p-j*r*p+j*z*i-e*n*i-h*z*d+e*r*d;c[9]=j*q*p-h*t*p-j*k*i+e*t*i+h*k*d-
e*q*d;c[13]=h*t*z-j*q*z+j*k*r-e*t*r-h*k*n+e*q*n;c[2]=m*n*p-t*u*p+t*z*l-k*n*l-m*z*d+k*u*d;c[6]=j*u*p-f*n*p-j*z*l+e*n*l+f*z*d-e*u*d;c[10]=f*t*p-j*m*p+j*k*l-e*t*l-f*k*d+e*m*d;c[14]=j*m*z-f*t*z-j*k*u+e*t*u+f*k*n-e*m*n;c[3]=q*u*p-m*r*p-q*z*l+k*r*l+m*z*i-k*u*i;c[7]=f*r*p-h*u*p+h*z*l-e*r*l-f*z*i+e*u*i;c[11]=h*m*p-f*q*p-h*k*l+e*q*l+f*k*i-e*m*i;c[15]=f*q*z-h*m*z+h*k*u-e*q*u-f*k*r+e*m*r;c=e*c[0]+k*c[4]+z*c[8]+p*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");
this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},
scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,
0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,h=a.y,j=a.z,k=e*f,m=e*h;this.set(k*f+c,k*h-d*j,k*j+d*h,0,k*h+d*j,m*h+c,m*j-d*f,0,k*j-d*h,m*j+d*f,e*j*j+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,h=a.set(f[0],f[1],f[2]).length(),j=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(h=-h);c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);var c=1/h,f=1/j,m=1/k;b.elements[0]*=c;b.elements[1]*=
c;b.elements[2]*=c;b.elements[4]*=f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=m;b.elements[9]*=m;b.elements[10]*=m;d.setFromRotationMatrix(b);e.x=h;e.y=j;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var h=this.elements;h[0]=2*e/(b-a);h[4]=0;h[8]=(b+a)/(b-a);h[12]=0;h[1]=0;h[5]=2*e/(d-c);h[9]=(d+c)/(d-c);h[13]=0;h[2]=0;h[6]=0;h[10]=-(f+e)/(f-e);h[14]=-2*f*e/(f-e);h[3]=0;h[7]=0;h[11]=-1;h[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(0.5*
a)),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var h=this.elements,j=b-a,k=c-d,m=f-e;h[0]=2/j;h[4]=0;h[8]=0;h[12]=-((b+a)/j);h[1]=0;h[5]=2/k;h[9]=0;h[13]=-((c+d)/k);h[2]=0;h[6]=0;h[10]=-2/m;h[14]=-((f+e)/m);h[3]=0;h[7]=0;h[11]=0;h[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=
this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var h=this.planes;h[0].copy(a);h[1].copy(b);h[2].copy(c);h[3].copy(d);h[4].copy(e);h[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],h=c[4],j=c[5],k=c[6],m=c[7],q=c[8],t=c[9],z=c[10],u=c[11],r=c[12],n=c[13],p=c[14],c=c[15];b[0].setComponents(f-a,m-h,u-q,c-r).normalize();b[1].setComponents(f+
a,m+h,u+q,c+r).normalize();b[2].setComponents(f+d,m+j,u+t,c+n).normalize();b[3].setComponents(f-d,m-j,u-t,c-n).normalize();b[4].setComponents(f-e,m-k,u-z,c-p).normalize();b[5].setComponents(f+e,m+k,u+z,c+p).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){for(var b=this.planes,
c=a.center,a=-a.radius,d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var h=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>h&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=
this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Math={PI2:2*Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,
b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/
180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()};THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Spline=function(a){function b(a,b,c,d,e,f,h){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*h+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,h,j,k,m,q,t,z;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);h=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;m=this.points[c[0]];q=this.points[c[1]];t=this.points[c[2]];z=this.points[c[3]];j=h*h;k=h*j;d.x=b(m.x,q.x,t.x,z.x,h,j,k);d.y=b(m.y,q.y,t.y,z.y,h,j,k);d.z=b(m.z,q.z,t.z,z.z,h,j,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,h=new THREE.Vector3,j=[],k=0;j[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),h.copy(d),k+=h.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(j[b]=k,e=b);j[j.length]=k;return{chunks:j,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,h,j=[],k=new THREE.Vector3,m=this.getLength();j.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];h=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<h-1;c++)d=e+c*(1/h)*(f-e),d=this.getPoint(d),
j.push(k.copy(d).clone());j.push(k.copy(this.points[b]).clone())}this.points=j}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);
this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);
this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),
(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);
return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},addPoint:function(a){a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x);a.y<this.min.y?this.min.y=a.y:a.y>this.max.y&&(this.max.y=a.y);a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z)},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var b=1,c=a.length;b<c;b++)this.addPoint(a[b])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=
new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var e=b.geometry.vertices,f=0,h=e.length;f<h;f++)a.copy(e[f]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);
this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-
this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,h,j){a.subVectors(h,e);b.subVectors(f,e);c.subVectors(d,e);var d=a.dot(a),e=a.dot(b),f=a.dot(c),k=b.dot(b),h=b.dot(c),m=d*k-e*e,j=j||new THREE.Vector3;if(0==m)return j.set(-2,-1,-1);m=1/m;k=(k*f-e*h)*m;d=(d*h-e*f)*m;return j.set(1-k-d,d,k)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return 0.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,h=b.length;f<h;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),h=this.coplanarPoint(b);h.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,h);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(){var a=[];return function(b){if(void 0!==this._listeners){var c=this._listeners[b.type];if(void 0!==c){b.target=this;for(var d=c.length,e=0;e<d;e++)a[e]=c[e];for(e=0;e<d;e++)a[e].call(this,
b)}}}}()};(function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c);this.near=d||0;this.far=e||Infinity};var b=new a.Sphere,c=new a.Ray;new a.Plane;new a.Vector3;var d=new a.Vector3,e=new a.Matrix4,f=function(a,b){return a.distance-b.distance},h=new a.Vector3,j=new a.Vector3,k=new a.Vector3,m=function(f,q,u){if(f instanceof a.Sprite){d.setFromMatrixPosition(f.matrixWorld);var r=q.ray.distanceToPoint(d);if(r>f.scale.x)return u;u.push({distance:r,point:f.position,face:null,object:f})}else if(f instanceof
a.LOD)d.setFromMatrixPosition(f.matrixWorld),r=q.ray.origin.distanceTo(d),m(f.getObjectForDistance(r),q,u);else if(f instanceof a.Mesh){var n=f.geometry;null===n.boundingSphere&&n.computeBoundingSphere();b.copy(n.boundingSphere);b.applyMatrix4(f.matrixWorld);if(!1===q.ray.isIntersectionSphere(b))return u;e.getInverse(f.matrixWorld);c.copy(q.ray).applyMatrix4(e);if(null!==n.boundingBox&&!1===c.isIntersectionBox(n.boundingBox))return u;if(n instanceof a.BufferGeometry){var p=f.material;if(void 0===
p||!1===n.dynamic)return u;var l,i,s=q.precision;if(void 0!==n.attributes.index)for(var B=n.offsets,C=n.attributes.index.array,G=n.attributes.position.array,x=n.offsets.length,M=n.attributes.index.array.length/3,M=0;M<x;++M)for(var r=B[M].start,y=B[M].index,n=r,H=r+B[M].count;n<H;n+=3)r=y+C[n],l=y+C[n+1],i=y+C[n+2],h.set(G[3*r],G[3*r+1],G[3*r+2]),j.set(G[3*l],G[3*l+1],G[3*l+2]),k.set(G[3*i],G[3*i+1],G[3*i+2]),l=p.side===a.BackSide?c.intersectTriangle(k,j,h,!0):c.intersectTriangle(h,j,k,p.side!==a.DoubleSide),
null!==l&&(l.applyMatrix4(f.matrixWorld),r=q.ray.origin.distanceTo(l),r<s||(r<q.near||r>q.far)||u.push({distance:r,point:l,face:null,faceIndex:null,object:f}));else{G=n.attributes.position.array;M=n.attributes.position.array.length;for(n=0;n<M;n+=3)r=n,l=n+1,i=n+2,h.set(G[3*r],G[3*r+1],G[3*r+2]),j.set(G[3*l],G[3*l+1],G[3*l+2]),k.set(G[3*i],G[3*i+1],G[3*i+2]),l=p.side===a.BackSide?c.intersectTriangle(k,j,h,!0):c.intersectTriangle(h,j,k,p.side!==a.DoubleSide),null!==l&&(l.applyMatrix4(f.matrixWorld),
r=q.ray.origin.distanceTo(l),r<s||(r<q.near||r>q.far)||u.push({distance:r,point:l,face:null,faceIndex:null,object:f}))}}else if(n instanceof a.Geometry){C=f.material instanceof a.MeshFaceMaterial;G=!0===C?f.material.materials:null;s=q.precision;B=n.vertices;x=0;for(M=n.faces.length;x<M;x++)if(y=n.faces[x],p=!0===C?G[y.materialIndex]:f.material,void 0!==p){r=B[y.a];l=B[y.b];i=B[y.c];if(!0===p.morphTargets){var H=n.morphTargets,K=f.morphTargetInfluences;h.set(0,0,0);j.set(0,0,0);k.set(0,0,0);for(var w=
0,N=H.length;w<N;w++){var D=K[w];if(0!==D){var L=H[w].vertices;h.x+=(L[y.a].x-r.x)*D;h.y+=(L[y.a].y-r.y)*D;h.z+=(L[y.a].z-r.z)*D;j.x+=(L[y.b].x-l.x)*D;j.y+=(L[y.b].y-l.y)*D;j.z+=(L[y.b].z-l.z)*D;k.x+=(L[y.c].x-i.x)*D;k.y+=(L[y.c].y-i.y)*D;k.z+=(L[y.c].z-i.z)*D}}h.add(r);j.add(l);k.add(i);r=h;l=j;i=k}l=p.side===a.BackSide?c.intersectTriangle(i,l,r,!0):c.intersectTriangle(r,l,i,p.side!==a.DoubleSide);null!==l&&(l.applyMatrix4(f.matrixWorld),r=q.ray.origin.distanceTo(l),r<s||(r<q.near||r>q.far)||u.push({distance:r,
point:l,face:y,faceIndex:x,object:f}))}}}else if(f instanceof a.Line){s=q.linePrecision;p=s*s;n=f.geometry;null===n.boundingSphere&&n.computeBoundingSphere();b.copy(n.boundingSphere);b.applyMatrix4(f.matrixWorld);if(!1===q.ray.isIntersectionSphere(b))return u;e.getInverse(f.matrixWorld);c.copy(q.ray).applyMatrix4(e);if(n instanceof a.Geometry){B=n.vertices;s=B.length;l=new a.Vector3;i=new a.Vector3;M=f.type===a.LineStrip?1:2;for(n=0;n<s-1;n+=M)c.distanceSqToSegment(B[n],B[n+1],i,l)>p||(r=c.origin.distanceTo(i),
r<q.near||r>q.far||u.push({distance:r,point:l.clone().applyMatrix4(f.matrixWorld),face:null,faceIndex:null,object:f}))}}},q=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)m(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.linePrecision=1;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b)};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&q(a,this,c);m(a,this,c);c.sort(f);return c};a.Raycaster.prototype.intersectObjects=function(a,
b){for(var c=[],d=0,e=a.length;d<e;d++)m(a[d],this,c),!0===b&&q(a[d],this,c);c.sort(f);return c}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this._rotation=new THREE.Euler;this._quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this._rotation._quaternion=this.quaternion;this._quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;
this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};
THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(a){this._rotation=a;this._rotation._quaternion=this._quaternion;this._quaternion._euler=this._rotation;this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(a){this._quaternion=a;this._quaternion._euler=this._rotation;this._rotation._quaternion=this._quaternion;this._quaternion._updateEuler()},get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");
return this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);
this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=
new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b);a.applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translate:function(a,b){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");
return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),
lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=
this.children.indexOf(a);if(-1!==b){a.parent=void 0;a.dispatchEvent({type:"removed"});this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.id===a||!0===b&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,
b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getObjectByName(a,b),void 0!==e))return e}},getChildByName:function(a,b){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,
this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);
a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));
if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){function a(){if(k===q){var a=new THREE.RenderableVertex;m.push(a);q++;k++;return a}return m[k++]}function b(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function c(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,j=-b.z+b.w;if(0<=e&&0<=f&&0<=h&&0<=j)return!0;if(0>e&&0>f||0>h&&0>j)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>h?c=Math.max(c,h/(h-j)):0>j&&(d=Math.min(d,h/(h-j)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var d,e,f=[],h=
0,j,k,m=[],q=0,t,z,u=[],r=0,n,p,l=[],i=0,s,B,C=[],G=0,x={objects:[],sprites:[],lights:[],elements:[]},M=new THREE.Vector3,y=new THREE.Vector3,H=new THREE.Vector3,K=new THREE.Vector3,w=new THREE.Vector4,N=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),D=new THREE.Box3,L=Array(3),v=new THREE.Matrix4,F=new THREE.Matrix4,aa,ta=new THREE.Matrix4,ua=new THREE.Matrix3,Wa=new THREE.Matrix3,Xa=new THREE.Vector3,ka=new THREE.Frustum,oa=new THREE.Vector4,I=new THREE.Vector4;this.projectVector=
function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);F.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(F)};var Z=new THREE.Matrix4;this.unprojectVector=function(a,b){Z.getInverse(b.projectionMatrix);F.multiplyMatrices(b.matrixWorld,Z);return a.applyProjection(F)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,c)};var pa=function(a){if(e===
h){var b=new THREE.RenderableObject;f.push(b);h++;e++;d=b}else d=f[e++];d.id=a.id;d.object=a;null!==a.renderDepth?d.z=a.renderDepth:(K.setFromMatrixPosition(a.matrixWorld),K.applyProjection(F),d.z=K.z);return d},va=function(a){var b=a.positionWorld,c=a.positionScreen;b.copy(a.position).applyMatrix4(aa);c.copy(b).applyMatrix4(F);b=1/c.w;c.x*=b;c.y*=b;c.z*=b;a.visible=-1<=c.x&&1>=c.x&&-1<=c.y&&1>=c.y&&-1<=c.z&&1>=c.z},ob=function(a){if(!1!==a.visible){a instanceof THREE.Light?x.lights.push(a):a instanceof
THREE.Mesh||a instanceof THREE.Line?(!1===a.frustumCulled||!0===ka.intersectsObject(a))&&x.objects.push(pa(a)):a instanceof THREE.Sprite&&x.sprites.push(pa(a));for(var b=0,c=a.children.length;b<c;b++)ob(a.children[b])}};this.projectScene=function(d,f,h,q){var Z=!1,K,U,pa,V,ab,W,$,Aa,bb;B=p=z=0;x.elements.length=0;!0===d.autoUpdate&&d.updateMatrixWorld();void 0===f.parent&&f.updateMatrixWorld();v.copy(f.matrixWorldInverse.getInverse(f.matrixWorld));F.multiplyMatrices(f.projectionMatrix,v);Wa.getNormalMatrix(v);
ka.setFromMatrix(F);e=0;x.objects.length=0;x.sprites.length=0;x.lights.length=0;ob(d);!0===h&&x.objects.sort(b);for(var h=0,Ya=x.objects.length;h<Ya;h++)if(d=x.objects[h].object,aa=d.matrixWorld,k=0,d instanceof THREE.Mesh){K=d.geometry;U=K.vertices;pa=K.faces;ab=K.faceVertexUvs;ua.getNormalMatrix(aa);Aa=d.material instanceof THREE.MeshFaceMaterial;bb=!0===Aa?d.material:null;for(var ha=0,Ia=U.length;ha<Ia;ha++)j=a(),j.position.copy(U[ha]),va(j);ha=0;for(Ia=pa.length;ha<Ia;ha++){U=pa[ha];var Ba=!0===
Aa?bb.materials[U.materialIndex]:d.material;if(void 0!==Ba){var ra=Ba.side;V=m[U.a];W=m[U.b];$=m[U.c];if(!0===Ba.morphTargets){var Z=K.morphTargets,qa=d.morphTargetInfluences,Oa=V.position,Pa=W.position,Qa=$.position;M.set(0,0,0);y.set(0,0,0);H.set(0,0,0);for(var wa=0,wb=Z.length;wa<wb;wa++){var Ca=qa[wa];if(0!==Ca){var Ja=Z[wa].vertices;M.x+=(Ja[U.a].x-Oa.x)*Ca;M.y+=(Ja[U.a].y-Oa.y)*Ca;M.z+=(Ja[U.a].z-Oa.z)*Ca;y.x+=(Ja[U.b].x-Pa.x)*Ca;y.y+=(Ja[U.b].y-Pa.y)*Ca;y.z+=(Ja[U.b].z-Pa.z)*Ca;H.x+=(Ja[U.c].x-
Qa.x)*Ca;H.y+=(Ja[U.c].y-Qa.y)*Ca;H.z+=(Ja[U.c].z-Qa.z)*Ca}}V.position.add(M);W.position.add(y);$.position.add(H);va(V);va(W);va($)}L[0]=V.positionScreen;L[1]=W.positionScreen;L[2]=$.positionScreen;if(!0===V.visible||!0===W.visible||!0===$.visible||N.isIntersectionBox(D.setFromPoints(L)))if(Z=0>($.positionScreen.x-V.positionScreen.x)*(W.positionScreen.y-V.positionScreen.y)-($.positionScreen.y-V.positionScreen.y)*(W.positionScreen.x-V.positionScreen.x),ra===THREE.DoubleSide||Z===(ra===THREE.FrontSide)){z===
r?(qa=new THREE.RenderableFace3,u.push(qa),r++,z++,t=qa):t=u[z++];t.id=d.id;t.v1.copy(V);t.v2.copy(W);t.v3.copy($);t.normalModel.copy(U.normal);!1===Z&&(ra===THREE.BackSide||ra===THREE.DoubleSide)&&t.normalModel.negate();t.normalModel.applyMatrix3(ua).normalize();t.normalModelView.copy(t.normalModel).applyMatrix3(Wa);t.centroidModel.copy(U.centroid).applyMatrix4(aa);V=U.vertexNormals;W=0;for($=Math.min(V.length,3);W<$;W++)qa=t.vertexNormalsModel[W],qa.copy(V[W]),!1===Z&&(ra===THREE.BackSide||ra===
THREE.DoubleSide)&&qa.negate(),qa.applyMatrix3(ua).normalize(),t.vertexNormalsModelView[W].copy(qa).applyMatrix3(Wa);t.vertexNormalsLength=V.length;W=0;for(ra=Math.min(ab.length,3);W<ra;W++)if(V=ab[W][ha],void 0!==V){$=0;for(Z=V.length;$<Z;$++)t.uvs[W][$]=V[$]}t.color=U.color;t.material=Ba;Xa.copy(t.centroidModel).applyProjection(F);t.z=Xa.z;x.elements.push(t)}}}}else if(d instanceof THREE.Line){ta.multiplyMatrices(F,aa);U=d.geometry.vertices;V=a();V.positionScreen.copy(U[0]).applyMatrix4(ta);K=d.type===
THREE.LinePieces?2:1;ha=1;for(Ia=U.length;ha<Ia;ha++)V=a(),V.positionScreen.copy(U[ha]).applyMatrix4(ta),0<(ha+1)%K||(W=m[k-2],oa.copy(V.positionScreen),I.copy(W.positionScreen),!0===c(oa,I)&&(oa.multiplyScalar(1/oa.w),I.multiplyScalar(1/I.w),p===i?(pa=new THREE.RenderableLine,l.push(pa),i++,p++,n=pa):n=l[p++],n.id=d.id,n.v1.positionScreen.copy(oa),n.v2.positionScreen.copy(I),n.z=Math.max(oa.z,I.z),n.material=d.material,d.material.vertexColors===THREE.VertexColors&&(n.vertexColors[0].copy(d.geometry.colors[ha]),
n.vertexColors[1].copy(d.geometry.colors[ha-1])),x.elements.push(n)))}h=0;for(Ya=x.sprites.length;h<Ya;h++)d=x.sprites[h].object,aa=d.matrixWorld,w.set(aa.elements[12],aa.elements[13],aa.elements[14],1),w.applyMatrix4(F),K=1/w.w,w.z*=K,-1<=w.z&&1>=w.z&&(B===G?(pa=new THREE.RenderableSprite,C.push(pa),G++,B++,s=pa):s=C[B++],s.id=d.id,s.x=w.x*K,s.y=w.y*K,s.z=w.z,s.object=d,s.rotation=d.rotation,s.scale.x=d.scale.x*Math.abs(s.x-(w.x+f.projectionMatrix.elements[0])/(w.w+f.projectionMatrix.elements[12])),
s.scale.y=d.scale.y*Math.abs(s.y-(w.y+f.projectionMatrix.elements[5])/(w.w+f.projectionMatrix.elements[13])),s.material=d.material,x.elements.push(s));!0===q&&x.elements.sort(b);return x}};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,h){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,e,f,h)};THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=
this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];e.normal.applyMatrix3(b).normalize();for(var f=0,h=e.vertexNormals.length;f<h;f++)e.vertexNormals[f].applyMatrix3(b).normalize();e.centroid.applyMatrix4(a)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof
THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,0,0),c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],h=this.vertices[e.b];a.subVectors(this.vertices[e.c],h);b.subVectors(f,
h);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,f,h,j=new THREE.Vector3,k=new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],h=this.vertices[c.c],j.subVectors(h,f),k.subVectors(e,f),j.cross(k),d[c.a].add(j),d[c.b].add(j),d[c.c].add(j)}else{a=
0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal)}b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=
e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;
var h=this.morphNormals[a].vertexNormals,j,k;c=0;for(d=this.faces.length;c<d;c++)j=new THREE.Vector3,k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(j),h.push(k)}h=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=h.faceNormals[c],k=h.vertexNormals[c],j.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=
this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,h,j,k,m,q,t,z,u,r,n,p,l=[],i=[];c=new THREE.Vector3;var s=new THREE.Vector3,B=new THREE.Vector3,C=new THREE.Vector3,G=new THREE.Vector3;a=0;for(b=this.vertices.length;a<b;a++)l[a]=new THREE.Vector3,i[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,p=e.b,e=e.c,h=this.vertices[d],j=this.vertices[p],
k=this.vertices[e],m=f[0],q=f[1],t=f[2],f=j.x-h.x,z=k.x-h.x,u=j.y-h.y,r=k.y-h.y,j=j.z-h.z,h=k.z-h.z,k=q.x-m.x,n=t.x-m.x,q=q.y-m.y,m=t.y-m.y,t=1/(k*m-n*q),c.set((m*f-q*z)*t,(m*u-q*r)*t,(m*j-q*h)*t),s.set((k*z-n*f)*t,(k*r-n*u)*t,(k*h-n*j)*t),l[d].add(c),l[p].add(c),l[e].add(c),i[d].add(s),i[p].add(s),i[e].add(s);s=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++){e=this.faces[a];for(c=0;c<Math.min(e.vertexNormals.length,3);c++)G.copy(e.vertexNormals[c]),d=e[s[c]],p=l[d],B.copy(p),B.sub(G.multiplyScalar(G.dot(p))).normalize(),
C.crossVectors(e.vertexNormals[c],p),d=C.dot(i[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(B.x,B.y,B.z,d)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);
this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,h;f=0;for(h=this.vertices.length;f<h;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(h=this.faces.length;f<h;f++){e=this.faces[f];e.a=c[e.a];e.b=c[e.b];e.c=c[e.c];e=[e.a,e.b,e.c];for(d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}}for(f=a.length-1;0<=f;f--){e=
a[f];this.faces.splice(e,1);c=0;for(h=this.faceVertexUvs.length;c<h;c++)this.faceVertexUvs[c].splice(e,1)}f=this.vertices.length-b.length;this.vertices=b;return f},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],h=0,j=e.length;h<j;h++)f.push(new THREE.Vector2(e[h].x,e[h].y));a.faceVertexUvs[0].push(f)}return a},
dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.dynamic=!0;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c,d){this.attributes[a]={itemSize:d,array:new b(c*d)}},applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&((new THREE.Matrix3).getNormalMatrix(a).multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===
this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b=this.boundingBox,c,d,e;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var f=3,h=a.length;f<h;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=
new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.addPoint(b);a.center(d);for(var h=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),h=Math.max(h,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(h)}}}(),computeVertexNormals:function(){if(this.attributes.position){var a,
b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a)};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.attributes.position.array,f=this.attributes.normal.array,h,j,k,m,q,t,z=new THREE.Vector3,u=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3;if(this.attributes.index){var l=this.attributes.index.array,i=this.offsets;c=0;for(d=
i.length;c<d;++c){b=i[c].start;h=i[c].count;var s=i[c].index;a=b;for(b+=h;a<b;a+=3)h=s+l[a],j=s+l[a+1],k=s+l[a+2],m=e[3*h],q=e[3*h+1],t=e[3*h+2],z.set(m,q,t),m=e[3*j],q=e[3*j+1],t=e[3*j+2],u.set(m,q,t),m=e[3*k],q=e[3*k+1],t=e[3*k+2],r.set(m,q,t),n.subVectors(r,u),p.subVectors(z,u),n.cross(p),f[3*h]+=n.x,f[3*h+1]+=n.y,f[3*h+2]+=n.z,f[3*j]+=n.x,f[3*j+1]+=n.y,f[3*j+2]+=n.z,f[3*k]+=n.x,f[3*k+1]+=n.y,f[3*k+2]+=n.z}}else{a=0;for(b=e.length;a<b;a+=9)m=e[a],q=e[a+1],t=e[a+2],z.set(m,q,t),m=e[a+3],q=e[a+4],
t=e[a+5],u.set(m,q,t),m=e[a+6],q=e[a+7],t=e[a+8],r.set(m,q,t),n.subVectors(r,u),p.subVectors(z,u),n.cross(p),f[a]=n.x,f[a+1]=n.y,f[a+2]=n.z,f[a+3]=n.x,f[a+4]=n.y,f[a+5]=n.z,f[a+6]=n.x,f[a+7]=n.y,f[a+8]=n.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){ua.x=d[3*a];ua.y=d[3*a+1];
ua.z=d[3*a+2];Wa.copy(ua);ka=j[a];aa.copy(ka);aa.sub(ua.multiplyScalar(ua.dot(ka))).normalize();ta.crossVectors(Wa,ka);oa=ta.dot(k[a]);Xa=0>oa?-1:1;h[4*a]=aa.x;h[4*a+1]=aa.y;h[4*a+2]=aa.z;h[4*a+3]=Xa}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,
d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*f)});for(var h=this.attributes.tangent.array,j=[],k=[],m=0;m<f;m++)j[m]=new THREE.Vector3,k[m]=new THREE.Vector3;var q,t,z,u,r,n,p,l,i,s,B,C,G,x,M,f=new THREE.Vector3,m=new THREE.Vector3,y,H,K,w,N,D,L,v=this.offsets;K=0;for(w=v.length;K<w;++K){H=v[K].start;N=v[K].count;var F=v[K].index;y=H;for(H+=N;y<H;y+=3)N=F+b[y],D=F+b[y+1],L=F+b[y+
2],q=c[3*N],t=c[3*N+1],z=c[3*N+2],u=c[3*D],r=c[3*D+1],n=c[3*D+2],p=c[3*L],l=c[3*L+1],i=c[3*L+2],s=e[2*N],B=e[2*N+1],C=e[2*D],G=e[2*D+1],x=e[2*L],M=e[2*L+1],u-=q,q=p-q,r-=t,t=l-t,n-=z,z=i-z,C-=s,s=x-s,G-=B,B=M-B,M=1/(C*B-s*G),f.set((B*u-G*q)*M,(B*r-G*t)*M,(B*n-G*z)*M),m.set((C*q-s*u)*M,(C*t-s*r)*M,(C*z-s*n)*M),j[N].add(f),j[D].add(f),j[L].add(f),k[N].add(m),k[D].add(m),k[L].add(m)}var aa=new THREE.Vector3,ta=new THREE.Vector3,ua=new THREE.Vector3,Wa=new THREE.Vector3,Xa,ka,oa;K=0;for(w=v.length;K<
w;++K){H=v[K].start;N=v[K].count;F=v[K].index;y=H;for(H+=N;y<H;y+=3)N=F+b[y],D=F+b[y+1],L=F+b[y+2],a(N),a(D),a(L)}this.tangentsNeedUpdate=this.hasTangents=!0}},clone:function(){var a=new THREE.BufferGeometry,b=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],c;for(c in this.attributes){for(var d=this.attributes[c],e=d.array,f={itemSize:d.itemSize,numItems:d.numItems,array:null},d=0,h=b.length;d<h;d++){var j=b[d];if(e instanceof j){f.array=
new j(e);break}}a.attributes[c]=f}d=0;for(h=this.offsets.length;d<h;d++)b=this.offsets[d],a.offsets.push({start:b.start,index:b.index,count:b.count});return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();
THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);return a};THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;return a};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;return a};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,
0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;return a};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;return a};THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=
this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;return a};THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+
"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=
Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,j,k,m,p){var l=/\.dds$/i.test(f),i=b+"/"+f;if(l){var s=THREE.ImageUtils.loadCompressedTexture(i);a[e]=s}else s=document.createElement("canvas"),a[e]=new THREE.Texture(s);a[e].sourceFile=f;j&&(a[e].repeat.set(j[0],j[1]),1!==j[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==j[1]&&(a[e].wrapT=THREE.RepeatWrapping));k&&a[e].offset.set(k[0],k[1]);m&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[m[0]]&&(a[e].wrapS=
f[m[0]]),void 0!==f[m[1]]&&(a[e].wrapT=f[m[1]]));p&&(a[e].anisotropy=p);if(!l){var B=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);B.image.width=a;B.image.height=b;B.image.getContext("2d").drawImage(this,0,0,a,b)}else B.image=this;B.needsUpdate=!0};void 0!==h.crossOrigin&&(a.crossOrigin=h.crossOrigin);a.src=i}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,j="MeshLambertMaterial",k={color:15658734,opacity:1,map:null,
lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var m=a.shading.toLowerCase();"phong"===m?j="MeshPhongMaterial":"basic"===m&&(j="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(k.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)k.transparent=a.transparent;void 0!==a.depthTest&&(k.depthTest=a.depthTest);void 0!==a.depthWrite&&(k.depthWrite=a.depthWrite);void 0!==a.visible&&(k.visible=a.visible);void 0!==a.flipSided&&(k.side=THREE.BackSide);
void 0!==a.doubleSided&&(k.side=THREE.DoubleSide);void 0!==a.wireframe&&(k.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?k.vertexColors=THREE.FaceColors:a.vertexColors&&(k.vertexColors=THREE.VertexColors));a.colorDiffuse?k.color=f(a.colorDiffuse):a.DbgColor&&(k.color=a.DbgColor);a.colorSpecular&&(k.specular=f(a.colorSpecular));a.colorAmbient&&(k.ambient=f(a.colorAmbient));a.transparency&&(k.opacity=a.transparency);a.specularCoef&&(k.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(k,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(k,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(k,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(k,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(k,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(k.bumpScale=a.mapBumpScale);a.mapNormal?(j=THREE.ShaderLib.normalmap,m=THREE.UniformsUtils.clone(j.uniforms),m.tNormal.value=k.normalMap,a.mapNormalFactor&&m.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),k.map&&(m.tDiffuse.value=k.map,m.enableDiffuse.value=!0),k.specularMap&&(m.tSpecular.value=k.specularMap,m.enableSpecular.value=!0),k.lightMap&&(m.tAO.value=k.lightMap,m.enableAO.value=!0),m.diffuse.value.setHex(k.color),
m.specular.value.setHex(k.specular),m.ambient.value.setHex(k.ambient),m.shininess.value=k.shininess,void 0!==k.opacity&&(m.opacity.value=k.opacity),j=new THREE.ShaderMaterial({fragmentShader:j.fragmentShader,vertexShader:j.vertexShader,uniforms:m,lights:!0,fog:!0}),k.transparent&&(j.transparent=!0)):j=new THREE[j](k);void 0!==a.DbgName&&(j.name=a.DbgName);return j}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=document.createElement("img");void 0!==b&&f.addEventListener("load",function(){e.manager.itemEnd(a);b(this)},!1);void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1);void 0!==d&&f.addEventListener("error",function(a){d(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin);f.src=a;e.manager.itemStart(a);return f},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,h=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var j=JSON.parse(f.responseText),j=a.parse(j,d);c(j.geometry,j.materials)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===h&&
(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.withCredentials=this.withCredentials;f.send(null)};
THREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1,e,f,h,j,k,m,q,t,z,u,r,n,p,l,i=a.faces;z=a.vertices;var s=a.normals,B=a.colors,C=0;if(void 0!==a.uvs){for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&C++;for(e=0;e<C;e++)c.faceVertexUvs[e]=[]}j=0;for(k=z.length;j<k;)m=new THREE.Vector3,m.x=z[j++]*d,m.y=z[j++]*d,m.z=z[j++]*d,c.vertices.push(m);j=0;for(k=i.length;j<k;)if(z=i[j++],u=z&1,h=z&2,e=z&8,q=z&16,r=z&32,m=z&64,z&=128,u){u=new THREE.Face3;u.a=i[j];
u.b=i[j+1];u.c=i[j+3];n=new THREE.Face3;n.a=i[j+1];n.b=i[j+2];n.c=i[j+3];j+=4;h&&(h=i[j++],u.materialIndex=h,n.materialIndex=h);h=c.faces.length;if(e)for(e=0;e<C;e++){p=a.uvs[e];c.faceVertexUvs[e][h]=[];c.faceVertexUvs[e][h+1]=[];for(f=0;4>f;f++)t=i[j++],l=p[2*t],t=p[2*t+1],l=new THREE.Vector2(l,t),2!==f&&c.faceVertexUvs[e][h].push(l),0!==f&&c.faceVertexUvs[e][h+1].push(l)}q&&(q=3*i[j++],u.normal.set(s[q++],s[q++],s[q]),n.normal.copy(u.normal));if(r)for(e=0;4>e;e++)q=3*i[j++],r=new THREE.Vector3(s[q++],
s[q++],s[q]),2!==e&&u.vertexNormals.push(r),0!==e&&n.vertexNormals.push(r);m&&(m=i[j++],m=B[m],u.color.setHex(m),n.color.setHex(m));if(z)for(e=0;4>e;e++)m=i[j++],m=B[m],2!==e&&u.vertexColors.push(new THREE.Color(m)),0!==e&&n.vertexColors.push(new THREE.Color(m));c.faces.push(u);c.faces.push(n)}else{u=new THREE.Face3;u.a=i[j++];u.b=i[j++];u.c=i[j++];h&&(h=i[j++],u.materialIndex=h);h=c.faces.length;if(e)for(e=0;e<C;e++){p=a.uvs[e];c.faceVertexUvs[e][h]=[];for(f=0;3>f;f++)t=i[j++],l=p[2*t],t=p[2*t+1],
l=new THREE.Vector2(l,t),c.faceVertexUvs[e][h].push(l)}q&&(q=3*i[j++],u.normal.set(s[q++],s[q++],s[q]));if(r)for(e=0;3>e;e++)q=3*i[j++],r=new THREE.Vector3(s[q++],s[q++],s[q]),u.vertexNormals.push(r);m&&(m=i[j++],u.color.setHex(B[m]));if(z)for(e=0;3>e;e++)m=i[j++],u.vertexColors.push(new THREE.Color(B[m]));c.faces.push(u)}if(a.skinWeights){j=0;for(k=a.skinWeights.length;j<k;j+=2)i=a.skinWeights[j],s=a.skinWeights[j+1],c.skinWeights.push(new THREE.Vector4(i,s,0,0))}if(a.skinIndices){j=0;for(k=a.skinIndices.length;j<
k;j+=2)i=a.skinIndices[j],s=a.skinIndices[j+1],c.skinIndices.push(new THREE.Vector4(i,s,0,0))}c.bones=a.bones;c.animation=a.animation;c.animations=a.animations;if(void 0!==a.morphTargets){j=0;for(k=a.morphTargets.length;j<k;j++){c.morphTargets[j]={};c.morphTargets[j].name=a.morphTargets[j].name;c.morphTargets[j].vertices=[];B=c.morphTargets[j].vertices;C=a.morphTargets[j].vertices;i=0;for(s=C.length;i<s;i+=3)z=new THREE.Vector3,z.x=C[i]*d,z.y=C[i+1]*d,z.z=C[i+2]*d,B.push(z)}}if(void 0!==a.morphColors){j=
0;for(k=a.morphColors.length;j<k;j++){c.morphColors[j]={};c.morphColors[j].name=a.morphColors[j].name;c.morphColors[j].colors=[];s=c.morphColors[j].colors;B=a.morphColors[j].colors;d=0;for(i=B.length;d<i;d+=3)C=new THREE.Color(16755200),C.setRGB(B[d],B[d+1],B[d+2]),s.push(C)}}c.computeCentroids();c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&c.computeTangents();return{geometry:c,materials:d}};THREE.GeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin);d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(){}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin);d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];void 0!==a.color&&b.color.setHex(a.color);void 0!==a.ambient&&b.ambient.setHex(a.ambient);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&
(b.shininess=a.shininess);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.wireframe&&(b.wireframe=a.wireframe);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};
THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader(c.manager);d.setCrossOrigin(this.crossOrigin);d.load(a,function(d){c.parse(JSON.parse(d),b,a)})},setCrossOrigin:function(a){this.crossOrigin=a},addGeometryHandler:function(a,b){this.geometryHandlers[a]={loaderClass:b}},addHierarchyHandler:function(a,b){this.hierarchyHandlers[a]={loaderClass:b}},parse:function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:z+"/"+a}function e(){f(x.scene,
y.objects)}function f(a,b){var c,e,h,k,m,p;for(p in b){var q=x.objects[p],l=b[p];if(void 0===q){if(l.type&&l.type in t.hierarchyHandlers){if(void 0===l.loading){c={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var s={},w;for(w in l)w in c||(s[w]=l[w]);r=x.materials[l.material];l.loading=!0;c=t.hierarchyHandlers[l.type].loaderObject;c.options?c.load(d(l.url,y.urlBaseType),j(p,a,r,l)):c.load(d(l.url,y.urlBaseType),j(p,
a,r,l),s)}}else if(void 0!==l.geometry){if(u=x.geometries[l.geometry]){q=!1;r=x.materials[l.material];q=r instanceof THREE.ShaderMaterial;e=l.position;h=l.rotation;k=l.scale;c=l.matrix;m=l.quaternion;l.material||(r=new THREE.MeshFaceMaterial(x.face_materials[l.geometry]));r instanceof THREE.MeshFaceMaterial&&0===r.materials.length&&(r=new THREE.MeshFaceMaterial(x.face_materials[l.geometry]));if(r instanceof THREE.MeshFaceMaterial)for(s=0;s<r.materials.length;s++)q=q||r.materials[s]instanceof THREE.ShaderMaterial;
q&&u.computeTangents();l.skin?q=new THREE.SkinnedMesh(u,r):l.morph?(q=new THREE.MorphAnimMesh(u,r),void 0!==l.duration&&(q.duration=l.duration),void 0!==l.time&&(q.time=l.time),void 0!==l.mirroredLoop&&(q.mirroredLoop=l.mirroredLoop),r.morphNormals&&u.computeMorphNormals()):q=new THREE.Mesh(u,r);q.name=p;c?(q.matrixAutoUpdate=!1,q.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(q.position.fromArray(e),m?q.quaternion.fromArray(m):q.rotation.fromArray(h),
q.scale.fromArray(k));q.visible=l.visible;q.castShadow=l.castShadow;q.receiveShadow=l.receiveShadow;a.add(q);x.objects[p]=q}}else if("AmbientLight"===l.type||"PointLight"===l.type||"DirectionalLight"===l.type||"SpotLight"===l.type||"HemisphereLight"===l.type||"AreaLight"===l.type){s=l.color;c=l.intensity;e=l.distance;h=l.position;k=l.rotation;switch(l.type){case "AmbientLight":i=new THREE.AmbientLight(s);break;case "PointLight":i=new THREE.PointLight(s,c,e);i.position.fromArray(h);break;case "DirectionalLight":i=
new THREE.DirectionalLight(s,c);i.position.fromArray(l.direction);break;case "SpotLight":i=new THREE.SpotLight(s,c,e,1);i.angle=l.angle;i.position.fromArray(h);i.target.set(h[0],h[1]-e,h[2]);i.target.applyEuler(new THREE.Euler(k[0],k[1],k[2],"XYZ"));break;case "HemisphereLight":i=new THREE.DirectionalLight(s,c,e);i.target.set(h[0],h[1]-e,h[2]);i.target.applyEuler(new THREE.Euler(k[0],k[1],k[2],"XYZ"));break;case "AreaLight":i=new THREE.AreaLight(s,c),i.position.fromArray(h),i.width=l.size,i.height=
l.size_y}a.add(i);i.name=p;x.lights[p]=i;x.objects[p]=i}else"PerspectiveCamera"===l.type||"OrthographicCamera"===l.type?(e=l.position,h=l.rotation,m=l.quaternion,"PerspectiveCamera"===l.type?n=new THREE.PerspectiveCamera(l.fov,l.aspect,l.near,l.far):"OrthographicCamera"===l.type&&(n=new THREE.OrthographicCamera(l.left,l.right,l.top,l.bottom,l.near,l.far)),n.name=p,n.position.fromArray(e),void 0!==m?n.quaternion.fromArray(m):void 0!==h&&n.rotation.fromArray(h),a.add(n),x.cameras[p]=n,x.objects[p]=
n):(e=l.position,h=l.rotation,k=l.scale,m=l.quaternion,q=new THREE.Object3D,q.name=p,q.position.fromArray(e),m?q.quaternion.fromArray(m):q.rotation.fromArray(h),q.scale.fromArray(k),q.visible=void 0!==l.visible?l.visible:!1,a.add(q),x.objects[p]=q,x.empties[p]=q);if(q){if(void 0!==l.userData)for(var z in l.userData)q.userData[z]=l.userData[z];if(void 0!==l.groups)for(s=0;s<l.groups.length;s++)c=l.groups[s],void 0===x.groups[c]&&(x.groups[c]=[]),x.groups[c].push(p)}}void 0!==q&&void 0!==l.children&&
f(q,l.children)}}function h(a){return function(b,c){b.name=a;x.geometries[a]=b;x.face_materials[a]=c;e();s-=1;t.onLoadComplete();m()}}function j(a,b,c,d){return function(f){var f=f.content?f.content:f.dae?f.scene:f,h=d.rotation,j=d.quaternion,k=d.scale;f.position.fromArray(d.position);j?f.quaternion.fromArray(j):f.rotation.fromArray(h);f.scale.fromArray(k);c&&f.traverse(function(a){a.material=c});var i=void 0!==d.visible?d.visible:!0;f.traverse(function(a){a.visible=i});b.add(f);f.name=a;x.objects[a]=
f;e();s-=1;t.onLoadComplete();m()}}function k(a){return function(b,c){b.name=a;x.geometries[a]=b;x.face_materials[a]=c}}function m(){t.callbackProgress({totalModels:C,totalTextures:G,loadedModels:C-s,loadedTextures:G-B},x);t.onLoadProgress();if(0===s&&0===B){for(var a=0;a<M.length;a++){var c=M[a],d=x.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,x.scene.add(c.object.target));c.object.target.userData.targetInverse=c.object}b(x)}}function q(a,b){b(a);if(void 0!==a.children)for(var c in a.children)q(a.children[c],
b)}var t=this,z=THREE.Loader.prototype.extractUrlBase(c),u,r,n,p,l,i,s,B,C,G,x,M=[],y=a,H;for(H in this.geometryHandlers)a=this.geometryHandlers[H].loaderClass,this.geometryHandlers[H].loaderObject=new a;for(H in this.hierarchyHandlers)a=this.hierarchyHandlers[H].loaderClass,this.hierarchyHandlers[H].loaderObject=new a;B=s=0;x={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(y.transform&&(H=y.transform.position,
a=y.transform.rotation,c=y.transform.scale,H&&x.scene.position.fromArray(H),a&&x.scene.rotation.fromArray(a),c&&x.scene.scale.fromArray(c),H||a||c))x.scene.updateMatrix(),x.scene.updateMatrixWorld();H=function(a){return function(){B-=a;m();t.onLoadComplete()}};for(var K in y.fogs)a=y.fogs[K],"linear"===a.type?p=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(p=new THREE.FogExp2(0,a.density)),a=a.color,p.color.setRGB(a[0],a[1],a[2]),x.fogs[K]=p;for(var w in y.geometries)p=y.geometries[w],p.type in
this.geometryHandlers&&(s+=1,t.onLoadStart());for(var N in y.objects)q(y.objects[N],function(a){a.type&&a.type in t.hierarchyHandlers&&(s+=1,t.onLoadStart())});C=s;for(w in y.geometries)if(p=y.geometries[w],"cube"===p.type)u=new THREE.CubeGeometry(p.width,p.height,p.depth,p.widthSegments,p.heightSegments,p.depthSegments),u.name=w,x.geometries[w]=u;else if("plane"===p.type)u=new THREE.PlaneGeometry(p.width,p.height,p.widthSegments,p.heightSegments),u.name=w,x.geometries[w]=u;else if("sphere"===p.type)u=
new THREE.SphereGeometry(p.radius,p.widthSegments,p.heightSegments),u.name=w,x.geometries[w]=u;else if("cylinder"===p.type)u=new THREE.CylinderGeometry(p.topRad,p.botRad,p.height,p.radSegs,p.heightSegs),u.name=w,x.geometries[w]=u;else if("torus"===p.type)u=new THREE.TorusGeometry(p.radius,p.tube,p.segmentsR,p.segmentsT),u.name=w,x.geometries[w]=u;else if("icosahedron"===p.type)u=new THREE.IcosahedronGeometry(p.radius,p.subdivisions),u.name=w,x.geometries[w]=u;else if(p.type in this.geometryHandlers){N=
{};for(l in p)"type"!==l&&"url"!==l&&(N[l]=p[l]);this.geometryHandlers[p.type].loaderObject.load(d(p.url,y.urlBaseType),h(w),N)}else"embedded"===p.type&&(N=y.embeds[p.id],N.metadata=y.metadata,N&&(N=this.geometryHandlers.ascii.loaderObject.parse(N,""),k(w)(N.geometry,N.materials)));for(var D in y.textures)if(w=y.textures[D],w.url instanceof Array){B+=w.url.length;for(l=0;l<w.url.length;l++)t.onLoadStart()}else B+=1,t.onLoadStart();G=B;for(D in y.textures){w=y.textures[D];void 0!==w.mapping&&void 0!==
THREE[w.mapping]&&(w.mapping=new THREE[w.mapping]);if(w.url instanceof Array){N=w.url.length;p=[];for(l=0;l<N;l++)p[l]=d(w.url[l],y.urlBaseType);l=(l=/\.dds$/i.test(p[0]))?THREE.ImageUtils.loadCompressedTextureCube(p,w.mapping,H(N)):THREE.ImageUtils.loadTextureCube(p,w.mapping,H(N))}else l=/\.dds$/i.test(w.url),N=d(w.url,y.urlBaseType),p=H(1),l=l?THREE.ImageUtils.loadCompressedTexture(N,w.mapping,p):THREE.ImageUtils.loadTexture(N,w.mapping,p),void 0!==THREE[w.minFilter]&&(l.minFilter=THREE[w.minFilter]),
void 0!==THREE[w.magFilter]&&(l.magFilter=THREE[w.magFilter]),w.anisotropy&&(l.anisotropy=w.anisotropy),w.repeat&&(l.repeat.set(w.repeat[0],w.repeat[1]),1!==w.repeat[0]&&(l.wrapS=THREE.RepeatWrapping),1!==w.repeat[1]&&(l.wrapT=THREE.RepeatWrapping)),w.offset&&l.offset.set(w.offset[0],w.offset[1]),w.wrap&&(N={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==N[w.wrap[0]]&&(l.wrapS=N[w.wrap[0]]),void 0!==N[w.wrap[1]]&&(l.wrapT=N[w.wrap[1]]));x.textures[D]=l}var L,v;for(L in y.materials){D=
y.materials[L];for(v in D.parameters)"envMap"===v||"map"===v||"lightMap"===v||"bumpMap"===v?D.parameters[v]=x.textures[D.parameters[v]]:"shading"===v?D.parameters[v]="flat"===D.parameters[v]?THREE.FlatShading:THREE.SmoothShading:"side"===v?D.parameters[v]="double"==D.parameters[v]?THREE.DoubleSide:"back"==D.parameters[v]?THREE.BackSide:THREE.FrontSide:"blending"===v?D.parameters[v]=D.parameters[v]in THREE?THREE[D.parameters[v]]:THREE.NormalBlending:"combine"===v?D.parameters[v]=D.parameters[v]in THREE?
THREE[D.parameters[v]]:THREE.MultiplyOperation:"vertexColors"===v?"face"==D.parameters[v]?D.parameters[v]=THREE.FaceColors:D.parameters[v]&&(D.parameters[v]=THREE.VertexColors):"wrapRGB"===v&&(H=D.parameters[v],D.parameters[v]=new THREE.Vector3(H[0],H[1],H[2]));void 0!==D.parameters.opacity&&1>D.parameters.opacity&&(D.parameters.transparent=!0);D.parameters.normalMap?(H=THREE.ShaderLib.normalmap,w=THREE.UniformsUtils.clone(H.uniforms),l=D.parameters.color,N=D.parameters.specular,p=D.parameters.ambient,
K=D.parameters.shininess,w.tNormal.value=x.textures[D.parameters.normalMap],D.parameters.normalScale&&w.uNormalScale.value.set(D.parameters.normalScale[0],D.parameters.normalScale[1]),D.parameters.map&&(w.tDiffuse.value=D.parameters.map,w.enableDiffuse.value=!0),D.parameters.envMap&&(w.tCube.value=D.parameters.envMap,w.enableReflection.value=!0,w.reflectivity.value=D.parameters.reflectivity),D.parameters.lightMap&&(w.tAO.value=D.parameters.lightMap,w.enableAO.value=!0),D.parameters.specularMap&&(w.tSpecular.value=
x.textures[D.parameters.specularMap],w.enableSpecular.value=!0),D.parameters.displacementMap&&(w.tDisplacement.value=x.textures[D.parameters.displacementMap],w.enableDisplacement.value=!0,w.uDisplacementBias.value=D.parameters.displacementBias,w.uDisplacementScale.value=D.parameters.displacementScale),w.diffuse.value.setHex(l),w.specular.value.setHex(N),w.ambient.value.setHex(p),w.shininess.value=K,D.parameters.opacity&&(w.opacity.value=D.parameters.opacity),r=new THREE.ShaderMaterial({fragmentShader:H.fragmentShader,
vertexShader:H.vertexShader,uniforms:w,lights:!0,fog:!0})):r=new THREE[D.type](D.parameters);r.name=L;x.materials[L]=r}for(L in y.materials)if(D=y.materials[L],D.parameters.materials){v=[];for(l=0;l<D.parameters.materials.length;l++)v.push(x.materials[D.parameters.materials[l]]);x.materials[L].materials=v}e();x.cameras&&y.defaults.camera&&(x.currentCamera=x.cameras[y.defaults.camera]);x.fogs&&y.defaults.fog&&(x.scene.fog=x.fogs[y.defaults.fog]);t.callbackSync(x);m()}};THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b){var c=new THREE.ImageLoader(this.manager);c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)})},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;
a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);
THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a};THREE.ParticleSystemMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleSystemMaterial.prototype.clone=function(){var a=new THREE.ParticleSystemMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName="position";this.setValues(a)};
THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.fog=this.fog;return a};THREE.Texture=function(a,b,c,d,e,f,h,j,k){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==k?k:1;this.format=void 0!==h?h:THREE.RGBAFormat;this.type=void 0!==j?j:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this._needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=
this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=this.unpackAlignment;return a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,e,f,h,j,k,m,q){THREE.Texture.call(this,null,f,h,j,k,m,d,e,q);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,h,j,k,m,q){THREE.Texture.call(this,null,f,h,j,k,m,d,e,q);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var a=new THREE.Matrix4;return function(b){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||b)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var b=0,c=this.children.length;b<c;b++){var d=this.children[b];d instanceof THREE.Bone?d.update(this.identityMatrix,!1):d.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=
[];b=0;for(c=this.bones.length;b<c;b++)d=new THREE.Matrix4,d.getInverse(this.bones[b].skinMatrix),this.boneInverses.push(d)}b=0;for(c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};
THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var h=a.morphTargets[e].name.match(d);if(h&&1<h.length){h=h[1];c[h]||(c[h]={start:Infinity,end:-Infinity});var j=c[h];e<j.start&&(j.start=e);e>j.end&&(j.end=e);b||(b=h)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Particle=THREE.Sprite;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}this.dispatchEvent({type:"objectAdded",object:a});a.dispatchEvent({type:"addedToScene",scene:this});for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1);if(a.shadowCascadeArray)for(b=0;b<a.shadowCascadeArray.length;b++)this.__removeObject(a.shadowCascadeArray[b])}else a instanceof THREE.Camera||(this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1));this.dispatchEvent({type:"objectRemoved",object:a});a.dispatchEvent({type:"removedFromScene",scene:this});for(b=
0;b<a.children.length;b++)this.__removeObject(a.children[b])};THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",
value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},
opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:0.98},reflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), opacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var h=1;"v2"===f.type?h=2:"v3"===f.type?h=3:"v4"===f.type?h=4:"c"===f.type&&(h=3);f.size=h;f.array=new Float32Array(c*h);f.buffer=g.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){var c=b.geometry,h=a.faces3,j=3*h.length,k=1*h.length,i=3*h.length,h=d(b,a),m=f(h),l=e(h),n=h.vertexColors?h.vertexColors:!1;a.__vertexArray=new Float32Array(3*j);l&&(a.__normalArray=new Float32Array(3*j));c.hasTangents&&(a.__tangentArray=new Float32Array(4*j));n&&(a.__colorArray=new Float32Array(3*j));m&&(0<c.faceVertexUvs.length&&(a.__uvArray=new Float32Array(2*j)),1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*j)));b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&
(a.__skinIndexArray=new Float32Array(4*j),a.__skinWeightArray=new Float32Array(4*j));a.__faceArray=new Uint16Array(3*k);a.__lineArray=new Uint16Array(2*i);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(m=a.numMorphTargets;c<m;c++)a.__morphTargetsArrays.push(new Float32Array(3*j))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(m=a.numMorphNormals;c<m;c++)a.__morphNormalsArrays.push(new Float32Array(3*j))}a.__webglFaceCount=3*k;a.__webglLineCount=2*i;if(h.attributes){void 0===a.__webglCustomAttributesList&&
(a.__webglCustomAttributesList=[]);for(var p in h.attributes){var k=h.attributes[p],i={},q;for(q in k)i[q]=k[q];if(!i.__webglInitialized||i.createUniqueBuffers)i.__webglInitialized=!0,c=1,"v2"===i.type?c=2:"v3"===i.type?c=3:"v4"===i.type?c=4:"c"===i.type&&(c=3),i.size=c,i.array=new Float32Array(j*c),i.buffer=g.createBuffer(),i.buffer.belongsToAttribute=p,k.needsUpdate=!0,i.__original=k;a.__webglCustomAttributesList.push(i)}}a.__inittedArrays=!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?
a.material.materials[b.materialIndex]:a.material}function e(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function h(a){wa[a]||(g.enableVertexAttribArray(a),wa[a]=!0)}function j(){for(var a in wa)wa[a]&&(g.disableVertexAttribArray(a),wa[a]=
!1)}function k(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function m(a,b){return b[0]-a[0]}function q(a,b,c){if(a.length)for(var d=0,g=a.length;d<g;d++)nb=va=null,Va=Fa=U=rb=Aa=$=sb=-1,Ra=!0,a[d].render(b,c,Pa,Qa),nb=va=null,Va=Fa=U=rb=Aa=$=sb=-1,Ra=!0}function t(a,b,c,d,g,e,f,h){var j,k,i,m;b?(k=a.length-1,m=b=-1):(k=0,b=a.length,m=1);for(var l=k;l!==b;l+=m)if(j=a[l],j.render){k=j.object;i=j.buffer;if(h)j=h;else{j=j[c];if(!j)continue;f&&I.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst);
I.setDepthTest(j.depthTest);I.setDepthWrite(j.depthWrite);y(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}I.setMaterialFaces(j);i instanceof THREE.BufferGeometry?I.renderBufferDirect(d,g,e,j,i,k):I.renderBuffer(d,g,e,j,i,k)}}function z(a,b,c,d,g,e,f){for(var h,j,k=0,i=a.length;k<i;k++)if(h=a[k],j=h.object,j.visible){if(f)h=f;else{h=h[b];if(!h)continue;e&&I.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);I.setDepthTest(h.depthTest);I.setDepthWrite(h.depthWrite);y(h.polygonOffset,
h.polygonOffsetFactor,h.polygonOffsetUnits)}I.renderImmediateObject(c,d,g,h,j)}}function u(a,d){var e,f,h,j;if(void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",Fb)),f=a.geometry,void 0!==f))if(f instanceof THREE.BufferGeometry){var k,i;for(k in f.attributes)i="index"===k?g.ELEMENT_ARRAY_BUFFER:g.ARRAY_BUFFER,j=f.attributes[k],
void 0===j.numItems&&(j.numItems=j.array.length),j.buffer=g.createBuffer(),g.bindBuffer(i,j.buffer),g.bufferData(i,j.array,g.STATIC_DRAW)}else if(a instanceof THREE.Mesh){h=a.material;if(void 0===f.geometryGroups){k=f;var m,l,n;i={};var p=k.morphTargets.length,q=k.morphNormals.length,t=h instanceof THREE.MeshFaceMaterial;k.geometryGroups={};h=0;for(m=k.faces.length;h<m;h++)l=k.faces[h],l=t?l.materialIndex:0,void 0===i[l]&&(i[l]={hash:l,counter:0}),n=i[l].hash+"_"+i[l].counter,void 0===k.geometryGroups[n]&&
(k.geometryGroups[n]={faces3:[],materialIndex:l,vertices:0,numMorphTargets:p,numMorphNormals:q}),65535<k.geometryGroups[n].vertices+3&&(i[l].counter+=1,n=i[l].hash+"_"+i[l].counter,void 0===k.geometryGroups[n]&&(k.geometryGroups[n]={faces3:[],materialIndex:l,vertices:0,numMorphTargets:p,numMorphNormals:q})),k.geometryGroups[n].faces3.push(h),k.geometryGroups[n].vertices+=3;k.geometryGroupsList=[];for(j in k.geometryGroups)k.geometryGroups[j].id=ec++,k.geometryGroupsList.push(k.geometryGroups[j])}for(e in f.geometryGroups)if(j=
f.geometryGroups[e],!j.__webglVertexBuffer){k=j;k.__webglVertexBuffer=g.createBuffer();k.__webglNormalBuffer=g.createBuffer();k.__webglTangentBuffer=g.createBuffer();k.__webglColorBuffer=g.createBuffer();k.__webglUVBuffer=g.createBuffer();k.__webglUV2Buffer=g.createBuffer();k.__webglSkinIndicesBuffer=g.createBuffer();k.__webglSkinWeightsBuffer=g.createBuffer();k.__webglFaceBuffer=g.createBuffer();k.__webglLineBuffer=g.createBuffer();p=i=void 0;if(k.numMorphTargets){k.__webglMorphTargetsBuffers=[];
i=0;for(p=k.numMorphTargets;i<p;i++)k.__webglMorphTargetsBuffers.push(g.createBuffer())}if(k.numMorphNormals){k.__webglMorphNormalsBuffers=[];i=0;for(p=k.numMorphNormals;i<p;i++)k.__webglMorphNormalsBuffers.push(g.createBuffer())}I.info.memory.geometries++;c(j,a);f.verticesNeedUpdate=!0;f.morphTargetsNeedUpdate=!0;f.elementsNeedUpdate=!0;f.uvsNeedUpdate=!0;f.normalsNeedUpdate=!0;f.tangentsNeedUpdate=!0;f.colorsNeedUpdate=!0}}else a instanceof THREE.Line?f.__webglVertexBuffer||(j=f,j.__webglVertexBuffer=
g.createBuffer(),j.__webglColorBuffer=g.createBuffer(),j.__webglLineDistanceBuffer=g.createBuffer(),I.info.memory.geometries++,j=f,k=j.vertices.length,j.__vertexArray=new Float32Array(3*k),j.__colorArray=new Float32Array(3*k),j.__lineDistanceArray=new Float32Array(1*k),j.__webglLineCount=k,b(j,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0,f.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&!f.__webglVertexBuffer&&(j=f,j.__webglVertexBuffer=g.createBuffer(),j.__webglColorBuffer=g.createBuffer(),
I.info.memory.geometries++,j=f,k=j.vertices.length,j.__vertexArray=new Float32Array(3*k),j.__colorArray=new Float32Array(3*k),j.__sortArray=[],j.__webglParticleCount=k,b(j,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0);if(void 0===a.__webglActive){if(a instanceof THREE.Mesh)if(f=a.geometry,f instanceof THREE.BufferGeometry)r(d.__webglObjects,f,a);else{if(f instanceof THREE.Geometry)for(e in f.geometryGroups)j=f.geometryGroups[e],r(d.__webglObjects,j,a)}else a instanceof THREE.Line||a instanceof
THREE.ParticleSystem?(f=a.geometry,r(d.__webglObjects,f,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?d.__webglObjectsImmediate.push({id:null,object:a,opaque:null,transparent:null,z:0}):a instanceof THREE.Sprite?d.__webglSprites.push(a):a instanceof THREE.LensFlare&&d.__webglFlares.push(a);a.__webglActive=!0}}function r(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,z:0})}function n(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;
return!1}function p(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function l(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Line?i(b.__webglObjects,a):a instanceof THREE.Sprite?s(b.__webglSprites,a):a instanceof THREE.LensFlare?s(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&i(b.__webglObjectsImmediate,a);delete a.__webglActive}function i(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}
function s(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function B(a,b,c,d,e){vb=0;d.needsUpdate&&(d.program&&Gb(d),I.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(I.maxMorphTargets));var f=!1,h=d.program,j=h.uniforms,k=d.uniforms;h!==va&&(g.useProgram(h),va=h,f=!0);d.id!==Va&&(Va=d.id,f=!0);if(f||a!==nb)g.uniformMatrix4fv(j.projectionMatrix,!1,a.projectionMatrix.elements),a!==nb&&(nb=a);if(d.skinning)if(Hb&&
e.useVertexTexture){if(null!==j.boneTexture){var i=C();g.uniform1i(j.boneTexture,i);I.setTexture(e.boneTexture,i)}null!==j.boneTextureWidth&&g.uniform1i(j.boneTextureWidth,e.boneTextureWidth);null!==j.boneTextureHeight&&g.uniform1i(j.boneTextureHeight,e.boneTextureHeight)}else null!==j.boneGlobalMatrices&&g.uniformMatrix4fv(j.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(k.fogColor.value=c.color,c instanceof THREE.Fog?(k.fogNear.value=c.near,k.fogFar.value=c.far):c instanceof THREE.FogExp2&&
(k.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ra){for(var m,l=i=0,n=0,p,q,t,r=Ib,s=r.directional.colors,u=r.directional.positions,y=r.point.colors,z=r.point.positions,B=r.point.distances,D=r.spot.colors,H=r.spot.positions,K=r.spot.distances,J=r.spot.directions,M=r.spot.anglesCos,N=r.spot.exponents,F=r.hemi.skyColors,aa=r.hemi.groundColors,U=r.hemi.positions,V=0,W=0,Z=0,$=0,ha=0,R=0,S=0,Q=0,la=m=0,c=t=la=0,f=b.length;c<
f;c++)m=b[c],m.onlyShadow||(p=m.color,q=m.intensity,t=m.distance,m instanceof THREE.AmbientLight?m.visible&&(I.gammaInput?(i+=p.r*p.r,l+=p.g*p.g,n+=p.b*p.b):(i+=p.r,l+=p.g,n+=p.b)):m instanceof THREE.DirectionalLight?(ha+=1,m.visible&&(fa.setFromMatrixPosition(m.matrixWorld),ja.setFromMatrixPosition(m.target.matrixWorld),fa.sub(ja),fa.normalize(),0===fa.x&&0===fa.y&&0===fa.z||(m=3*V,u[m]=fa.x,u[m+1]=fa.y,u[m+2]=fa.z,I.gammaInput?G(s,m,p,q*q):x(s,m,p,q),V+=1))):m instanceof THREE.PointLight?(R+=1,
m.visible&&(la=3*W,I.gammaInput?G(y,la,p,q*q):x(y,la,p,q),ja.setFromMatrixPosition(m.matrixWorld),z[la]=ja.x,z[la+1]=ja.y,z[la+2]=ja.z,B[W]=t,W+=1)):m instanceof THREE.SpotLight?(S+=1,m.visible&&(la=3*Z,I.gammaInput?G(D,la,p,q*q):x(D,la,p,q),ja.setFromMatrixPosition(m.matrixWorld),H[la]=ja.x,H[la+1]=ja.y,H[la+2]=ja.z,K[Z]=t,fa.copy(ja),ja.setFromMatrixPosition(m.target.matrixWorld),fa.sub(ja),fa.normalize(),J[la]=fa.x,J[la+1]=fa.y,J[la+2]=fa.z,M[Z]=Math.cos(m.angle),N[Z]=m.exponent,Z+=1)):m instanceof
THREE.HemisphereLight&&(Q+=1,m.visible&&(fa.setFromMatrixPosition(m.matrixWorld),fa.normalize(),0===fa.x&&0===fa.y&&0===fa.z||(t=3*$,U[t]=fa.x,U[t+1]=fa.y,U[t+2]=fa.z,p=m.color,m=m.groundColor,I.gammaInput?(q*=q,G(F,t,p,q),G(aa,t,m,q)):(x(F,t,p,q),x(aa,t,m,q)),$+=1))));c=3*V;for(f=Math.max(s.length,3*ha);c<f;c++)s[c]=0;c=3*W;for(f=Math.max(y.length,3*R);c<f;c++)y[c]=0;c=3*Z;for(f=Math.max(D.length,3*S);c<f;c++)D[c]=0;c=3*$;for(f=Math.max(F.length,3*Q);c<f;c++)F[c]=0;c=3*$;for(f=Math.max(aa.length,
3*Q);c<f;c++)aa[c]=0;r.directional.length=V;r.point.length=W;r.spot.length=Z;r.hemi.length=$;r.ambient[0]=i;r.ambient[1]=l;r.ambient[2]=n;Ra=!1}c=Ib;k.ambientLightColor.value=c.ambient;k.directionalLightColor.value=c.directional.colors;k.directionalLightDirection.value=c.directional.positions;k.pointLightColor.value=c.point.colors;k.pointLightPosition.value=c.point.positions;k.pointLightDistance.value=c.point.distances;k.spotLightColor.value=c.spot.colors;k.spotLightPosition.value=c.spot.positions;
k.spotLightDistance.value=c.spot.distances;k.spotLightDirection.value=c.spot.directions;k.spotLightAngleCos.value=c.spot.anglesCos;k.spotLightExponent.value=c.spot.exponents;k.hemisphereLightSkyColor.value=c.hemi.skyColors;k.hemisphereLightGroundColor.value=c.hemi.groundColors;k.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){k.opacity.value=d.opacity;I.gammaInput?k.diffuse.value.copyGammaToLinear(d.color):
k.diffuse.value=d.color;k.map.value=d.map;k.lightMap.value=d.lightMap;k.specularMap.value=d.specularMap;d.bumpMap&&(k.bumpMap.value=d.bumpMap,k.bumpScale.value=d.bumpScale);d.normalMap&&(k.normalMap.value=d.normalMap,k.normalScale.value.copy(d.normalScale));var ia;d.map?ia=d.map:d.specularMap?ia=d.specularMap:d.normalMap?ia=d.normalMap:d.bumpMap&&(ia=d.bumpMap);void 0!==ia&&(c=ia.offset,ia=ia.repeat,k.offsetRepeat.value.set(c.x,c.y,ia.x,ia.y));k.envMap.value=d.envMap;k.flipEnvMap.value=d.envMap instanceof
THREE.WebGLRenderTargetCube?1:-1;k.reflectivity.value=d.reflectivity;k.refractionRatio.value=d.refractionRatio;k.combine.value=d.combine;k.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(k.diffuse.value=d.color,k.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(k.diffuse.value=d.color,k.opacity.value=d.opacity,k.dashSize.value=d.dashSize,k.totalSize.value=d.dashSize+d.gapSize,k.scale.value=d.scale):d instanceof
THREE.ParticleSystemMaterial?(k.psColor.value=d.color,k.opacity.value=d.opacity,k.size.value=d.size,k.scale.value=v.height/2,k.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(k.shininess.value=d.shininess,I.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),k.emissive.value.copyGammaToLinear(d.emissive),k.specular.value.copyGammaToLinear(d.specular)):(k.ambient.value=d.ambient,k.emissive.value=d.emissive,k.specular.value=d.specular),d.wrapAround&&k.wrapRGB.value.copy(d.wrapRGB)):d instanceof
THREE.MeshLambertMaterial?(I.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),k.emissive.value.copyGammaToLinear(d.emissive)):(k.ambient.value=d.ambient,k.emissive.value=d.emissive),d.wrapAround&&k.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(k.mNear.value=a.near,k.mFar.value=a.far,k.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(k.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&k.shadowMatrix){c=ia=0;for(f=b.length;c<f;c++)if(i=b[c],
i.castShadow&&(i instanceof THREE.SpotLight||i instanceof THREE.DirectionalLight&&!i.shadowCascade))k.shadowMap.value[ia]=i.shadowMap,k.shadowMapSize.value[ia]=i.shadowMapSize,k.shadowMatrix.value[ia]=i.shadowMatrix,k.shadowDarkness.value[ia]=i.shadowDarkness,k.shadowBias.value[ia]=i.shadowBias,ia++}b=d.uniformsList;k=0;for(ia=b.length;k<ia;k++)if(f=h.uniforms[b[k][1]])if(c=b[k][0],l=c.type,i=c.value,"i"===l)g.uniform1i(f,i);else if("f"===l)g.uniform1f(f,i);else if("v2"===l)g.uniform2f(f,i.x,i.y);
else if("v3"===l)g.uniform3f(f,i.x,i.y,i.z);else if("v4"===l)g.uniform4f(f,i.x,i.y,i.z,i.w);else if("c"===l)g.uniform3f(f,i.r,i.g,i.b);else if("iv1"===l)g.uniform1iv(f,i);else if("iv"===l)g.uniform3iv(f,i);else if("fv1"===l)g.uniform1fv(f,i);else if("fv"===l)g.uniform3fv(f,i);else if("v2v"===l){void 0===c._array&&(c._array=new Float32Array(2*i.length));l=0;for(n=i.length;l<n;l++)r=2*l,c._array[r]=i[l].x,c._array[r+1]=i[l].y;g.uniform2fv(f,c._array)}else if("v3v"===l){void 0===c._array&&(c._array=
new Float32Array(3*i.length));l=0;for(n=i.length;l<n;l++)r=3*l,c._array[r]=i[l].x,c._array[r+1]=i[l].y,c._array[r+2]=i[l].z;g.uniform3fv(f,c._array)}else if("v4v"===l){void 0===c._array&&(c._array=new Float32Array(4*i.length));l=0;for(n=i.length;l<n;l++)r=4*l,c._array[r]=i[l].x,c._array[r+1]=i[l].y,c._array[r+2]=i[l].z,c._array[r+3]=i[l].w;g.uniform4fv(f,c._array)}else if("m4"===l)void 0===c._array&&(c._array=new Float32Array(16)),i.flattenToArray(c._array),g.uniformMatrix4fv(f,!1,c._array);else if("m4v"===
l){void 0===c._array&&(c._array=new Float32Array(16*i.length));l=0;for(n=i.length;l<n;l++)i[l].flattenToArrayOffset(c._array,16*l);g.uniformMatrix4fv(f,!1,c._array)}else if("t"===l){if(r=i,i=C(),g.uniform1i(f,i),r)if(r.image instanceof Array&&6===r.image.length){if(c=r,f=i,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.addEventListener("dispose",Jb),c.image.__webglTextureCube=g.createTexture(),I.info.memory.textures++);g.activeTexture(g.TEXTURE0+f);g.bindTexture(g.TEXTURE_CUBE_MAP,
c.image.__webglTextureCube);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof THREE.CompressedTexture;i=[];for(l=0;6>l;l++)n=i,r=l,I.autoScaleCubemaps&&!f?(s=c.image[l],y=fc,s.width<=y&&s.height<=y||(z=Math.max(s.width,s.height),u=Math.floor(s.width*y/z),y=Math.floor(s.height*y/z),z=document.createElement("canvas"),z.width=u,z.height=y,z.getContext("2d").drawImage(s,0,0,s.width,s.height,0,0,u,y),s=z)):s=c.image[l],n[r]=s;l=i[0];n=0===(l.width&l.width-1)&&0===(l.height&l.height-1);r=L(c.format);
s=L(c.type);w(g.TEXTURE_CUBE_MAP,c,n);for(l=0;6>l;l++)if(f){y=i[l].mipmaps;z=0;for(B=y.length;z<B;z++)u=y[z],c.format!==THREE.RGBAFormat?g.compressedTexImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,z,r,u.width,u.height,0,u.data):g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,z,r,u.width,u.height,0,r,s,u.data)}else g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,r,r,s,i[l]);c.generateMipmaps&&n&&g.generateMipmap(g.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else g.activeTexture(g.TEXTURE0+
f),g.bindTexture(g.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else r instanceof THREE.WebGLRenderTargetCube?(c=r,g.activeTexture(g.TEXTURE0+i),g.bindTexture(g.TEXTURE_CUBE_MAP,c.__webglTexture)):I.setTexture(r,i)}else if("tv"===l){void 0===c._array&&(c._array=[]);l=0;for(n=c.value.length;l<n;l++)c._array[l]=C();g.uniform1iv(f,c._array);l=0;for(n=c.value.length;l<n;l++)r=c.value[l],i=c._array[l],r&&I.setTexture(r,i)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+l);if((d instanceof
THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==j.cameraPosition)ja.setFromMatrixPosition(a.matrixWorld),g.uniform3f(j.cameraPosition,ja.x,ja.y,ja.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==j.viewMatrix&&g.uniformMatrix4fv(j.viewMatrix,!1,a.matrixWorldInverse.elements)}g.uniformMatrix4fv(j.modelViewMatrix,!1,e._modelViewMatrix.elements);j.normalMatrix&&g.uniformMatrix3fv(j.normalMatrix,
!1,e._normalMatrix.elements);null!==j.modelMatrix&&g.uniformMatrix4fv(j.modelMatrix,!1,e.matrixWorld.elements);return h}function C(){var a=vb;a>=Kb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Kb);vb+=1;return a}function G(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function x(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function M(a){a!==Ia&&(g.lineWidth(a),Ia=a)}function y(a,b,c){bb!==a&&(a?g.enable(g.POLYGON_OFFSET_FILL):g.disable(g.POLYGON_OFFSET_FILL),
bb=a);if(a&&(Ya!==b||ha!==c))g.polygonOffset(b,c),Ya=b,ha=c}function H(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function K(a,b){var c;"fragment"===a?c=g.createShader(g.FRAGMENT_SHADER):"vertex"===a&&(c=g.createShader(g.VERTEX_SHADER));g.shaderSource(c,b);g.compileShader(c);return!g.getShaderParameter(c,g.COMPILE_STATUS)?(console.error(g.getShaderInfoLog(c)),console.error(H(b)),null):c}function w(a,b,c){c?(g.texParameteri(a,g.TEXTURE_WRAP_S,L(b.wrapS)),
g.texParameteri(a,g.TEXTURE_WRAP_T,L(b.wrapT)),g.texParameteri(a,g.TEXTURE_MAG_FILTER,L(b.magFilter)),g.texParameteri(a,g.TEXTURE_MIN_FILTER,L(b.minFilter))):(g.texParameteri(a,g.TEXTURE_WRAP_S,g.CLAMP_TO_EDGE),g.texParameteri(a,g.TEXTURE_WRAP_T,g.CLAMP_TO_EDGE),g.texParameteri(a,g.TEXTURE_MAG_FILTER,D(b.magFilter)),g.texParameteri(a,g.TEXTURE_MIN_FILTER,D(b.minFilter)));if(cb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))g.texParameterf(a,cb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,
Lb)),b.__oldAnisotropy=b.anisotropy}function N(a,b){g.bindRenderbuffer(g.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_COMPONENT16,b.width,b.height),g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(g.renderbufferStorage(g.RENDERBUFFER,g.DEPTH_STENCIL,b.width,b.height),g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a)):g.renderbufferStorage(g.RENDERBUFFER,
g.RGBA4,b.width,b.height)}function D(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?g.NEAREST:g.LINEAR}function L(a){if(a===THREE.RepeatWrapping)return g.REPEAT;if(a===THREE.ClampToEdgeWrapping)return g.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return g.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return g.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return g.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return g.NEAREST_MIPMAP_LINEAR;
if(a===THREE.LinearFilter)return g.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return g.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return g.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return g.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return g.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return g.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return g.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return g.BYTE;if(a===THREE.ShortType)return g.SHORT;
if(a===THREE.UnsignedShortType)return g.UNSIGNED_SHORT;if(a===THREE.IntType)return g.INT;if(a===THREE.UnsignedIntType)return g.UNSIGNED_INT;if(a===THREE.FloatType)return g.FLOAT;if(a===THREE.AlphaFormat)return g.ALPHA;if(a===THREE.RGBFormat)return g.RGB;if(a===THREE.RGBAFormat)return g.RGBA;if(a===THREE.LuminanceFormat)return g.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return g.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return g.FUNC_ADD;if(a===THREE.SubtractEquation)return g.FUNC_SUBTRACT;if(a===
THREE.ReverseSubtractEquation)return g.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return g.ZERO;if(a===THREE.OneFactor)return g.ONE;if(a===THREE.SrcColorFactor)return g.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return g.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return g.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return g.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return g.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return g.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return g.DST_COLOR;
if(a===THREE.OneMinusDstColorFactor)return g.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return g.SRC_ALPHA_SATURATE;if(void 0!==Da){if(a===THREE.RGB_S3TC_DXT1_Format)return Da.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Da.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Da.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Da.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);
var a=a||{},v=void 0!==a.canvas?a.canvas:document.createElement("canvas"),F=void 0!==a.precision?a.precision:"highp",aa=void 0!==a.alpha?a.alpha:!1,ta=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,ua=void 0!==a.antialias?a.antialias:!1,Wa=void 0!==a.stencil?a.stencil:!0,Xa=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ka=new THREE.Color(0),oa=0;this.domElement=v;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?
self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,
geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var I=this,Z=[],pa=0,va=null,ob=null,Va=-1,Fa=null,nb=null,ec=0,vb=0,rb=-1,U=-1,sb=-1,V=-1,ab=-1,W=-1,$=-1,Aa=-1,bb=null,Ya=null,ha=null,Ia=null,Ba=0,ra=0,qa=v.width,Oa=v.height,Pa=0,Qa=0,wa={},wb=new THREE.Frustum,Ca=new THREE.Matrix4,Ja=new THREE.Matrix4,ja=new THREE.Vector3,fa=new THREE.Vector3,Ra=!0,Ib={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,
colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},g,Cb,Mb,cb,Da;try{var Nb={alpha:aa,premultipliedAlpha:ta,antialias:ua,stencil:Wa,preserveDrawingBuffer:Xa};g=v.getContext("webgl",Nb)||v.getContext("experimental-webgl",Nb);if(null===g)throw"Error creating WebGL context.";}catch(pc){console.error(pc)}Cb=g.getExtension("OES_texture_float");g.getExtension("OES_texture_float_linear");Mb=g.getExtension("OES_standard_derivatives");
cb=g.getExtension("EXT_texture_filter_anisotropic")||g.getExtension("MOZ_EXT_texture_filter_anisotropic")||g.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Da=g.getExtension("WEBGL_compressed_texture_s3tc")||g.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||g.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");Cb||console.log("THREE.WebGLRenderer: Float textures not supported.");Mb||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");cb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");
Da||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===g.getShaderPrecisionFormat&&(g.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});g.clearColor(0,0,0,1);g.clearDepth(1);g.clearStencil(0);g.enable(g.DEPTH_TEST);g.depthFunc(g.LEQUAL);g.frontFace(g.CCW);g.cullFace(g.BACK);g.enable(g.CULL_FACE);g.enable(g.BLEND);g.blendEquation(g.FUNC_ADD);g.blendFunc(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA);g.viewport(Ba,ra,qa,Oa);g.clearColor(ka.r,ka.g,
ka.b,oa);this.context=g;var Kb=g.getParameter(g.MAX_TEXTURE_IMAGE_UNITS),qc=g.getParameter(g.MAX_VERTEX_TEXTURE_IMAGE_UNITS);g.getParameter(g.MAX_TEXTURE_SIZE);var fc=g.getParameter(g.MAX_CUBE_MAP_TEXTURE_SIZE),Lb=cb?g.getParameter(cb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,xb=0<qc,Hb=xb&&Cb;Da&&g.getParameter(g.COMPRESSED_TEXTURE_FORMATS);var rc=g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.HIGH_FLOAT),sc=g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.MEDIUM_FLOAT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,
g.LOW_FLOAT);var tc=g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.HIGH_FLOAT),uc=g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.MEDIUM_FLOAT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.LOW_FLOAT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.HIGH_INT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.MEDIUM_INT);g.getShaderPrecisionFormat(g.VERTEX_SHADER,g.LOW_INT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.HIGH_INT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,g.MEDIUM_INT);g.getShaderPrecisionFormat(g.FRAGMENT_SHADER,
g.LOW_INT);var vc=0<rc.precision&&0<tc.precision,Tb=0<sc.precision&&0<uc.precision;"highp"===F&&!vc&&(Tb?(F="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(F="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===F&&!Tb&&(F="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return g};this.supportsVertexTextures=function(){return xb};this.supportsFloatTextures=function(){return Cb};
this.supportsStandardDerivatives=function(){return Mb};this.supportsCompressedTextureS3TC=function(){return Da};this.getMaxAnisotropy=function(){return Lb};this.getPrecision=function(){return F};this.setSize=function(a,b,c){v.width=a*this.devicePixelRatio;v.height=b*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==c&&(v.style.width=a+"px",v.style.height=b+"px");this.setViewport(0,0,v.width,v.height)};this.setViewport=function(a,b,c,d){Ba=void 0!==a?a:0;ra=void 0!==b?b:0;qa=void 0!==c?c:v.width;
Oa=void 0!==d?d:v.height;g.viewport(Ba,ra,qa,Oa)};this.setScissor=function(a,b,c,d){g.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?g.enable(g.SCISSOR_TEST):g.disable(g.SCISSOR_TEST)};this.setClearColor=function(a,b){ka.set(a);oa=void 0!==b?b:1;g.clearColor(ka.r,ka.g,ka.b,oa)};this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,b)};this.getClearColor=function(){return ka};this.getClearAlpha=
function(){return oa};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=g.COLOR_BUFFER_BIT;if(void 0===b||b)d|=g.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=g.STENCIL_BUFFER_BIT;g.clear(d)};this.clearColor=function(){g.clear(g.COLOR_BUFFER_BIT)};this.clearDepth=function(){g.clear(g.DEPTH_BUFFER_BIT)};this.clearStencil=function(){g.clear(g.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};
this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=function(a,b){va=null;Va=Fa=Aa=$=sb=-1;Ra=!0;U=rb=-1;this.shadowMapPlugin.update(a,b)};var Fb=function(a){a=a.target;a.removeEventListener("dispose",Fb);a.__webglInit=void 0;if(a instanceof THREE.BufferGeometry){var b=a.attributes,c;for(c in b)void 0!==b[c].buffer&&g.deleteBuffer(b[c].buffer);I.info.memory.geometries--}else if(void 0!==a.geometryGroups)for(b in a.geometryGroups){c=a.geometryGroups[b];if(void 0!==
c.numMorphTargets)for(var d=0,e=c.numMorphTargets;d<e;d++)g.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(void 0!==c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)g.deleteBuffer(c.__webglMorphNormalsBuffers[d])}Ub(c)}else Ub(a)},Jb=function(a){a=a.target;a.removeEventListener("dispose",Jb);a.image&&a.image.__webglTextureCube?g.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,g.deleteTexture(a.__webglTexture));I.info.memory.textures--},Vb=function(a){a=a.target;
a.removeEventListener("dispose",Vb);if(a&&a.__webglTexture)if(g.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)g.deleteFramebuffer(a.__webglFramebuffer[b]),g.deleteRenderbuffer(a.__webglRenderbuffer[b]);else g.deleteFramebuffer(a.__webglFramebuffer),g.deleteRenderbuffer(a.__webglRenderbuffer);I.info.memory.textures--},Ob=function(a){a=a.target;a.removeEventListener("dispose",Ob);Gb(a)},Ub=function(a){void 0!==a.__webglVertexBuffer&&g.deleteBuffer(a.__webglVertexBuffer);
void 0!==a.__webglNormalBuffer&&g.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&g.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&g.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&g.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&g.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&g.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&g.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==
a.__webglFaceBuffer&&g.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&g.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&g.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)g.deleteBuffer(a.__webglCustomAttributesList[b].buffer);I.info.memory.geometries--},Gb=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1,a=0;for(c=Z.length;a<c;a++)if(d=Z[a],d.program===b){d.usedTimes--;
0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=Z.length;a<c;a++)d=Z[a],d.program!==b&&e.push(d);Z=e;g.deleteProgram(b);I.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=g.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=g.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=g.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=g.createBuffer());
a.hasPositions&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglVertexBuffer),g.bufferData(g.ARRAY_BUFFER,a.positionArray,g.DYNAMIC_DRAW),g.enableVertexAttribArray(b.attributes.position),g.vertexAttribPointer(b.attributes.position,3,g.FLOAT,!1,0,0));if(a.hasNormals){g.bindBuffer(g.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,h,j,k,i,l,m,n,p,q=3*a.count;for(p=0;p<q;p+=9)n=a.normalArray,d=n[p],e=n[p+1],f=n[p+2],h=n[p+3],k=n[p+4],l=n[p+5],j=n[p+6],i=n[p+7],m=n[p+8],d=(d+h+j)/
3,e=(e+k+i)/3,f=(f+l+m)/3,n[p]=d,n[p+1]=e,n[p+2]=f,n[p+3]=d,n[p+4]=e,n[p+5]=f,n[p+6]=d,n[p+7]=e,n[p+8]=f}g.bufferData(g.ARRAY_BUFFER,a.normalArray,g.DYNAMIC_DRAW);g.enableVertexAttribArray(b.attributes.normal);g.vertexAttribPointer(b.attributes.normal,3,g.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglUvBuffer),g.bufferData(g.ARRAY_BUFFER,a.uvArray,g.DYNAMIC_DRAW),g.enableVertexAttribArray(b.attributes.uv),g.vertexAttribPointer(b.attributes.uv,2,g.FLOAT,!1,0,0));a.hasColors&&
c.vertexColors!==THREE.NoColors&&(g.bindBuffer(g.ARRAY_BUFFER,a.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,a.colorArray,g.DYNAMIC_DRAW),g.enableVertexAttribArray(b.attributes.color),g.vertexAttribPointer(b.attributes.color,3,g.FLOAT,!1,0,0));g.drawArrays(g.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var k,i,l,m;k=B(a,b,c,d,f);b=k.attributes;a=e.attributes;c=!1;k=16777215*e.id+2*k.id+(d.wireframe?1:0);k!==Fa&&(Fa=k,c=!0);c&&j();if(f instanceof
THREE.Mesh)if(f=a.index){e=e.offsets;1<e.length&&(c=!0);for(var n=0,p=e.length;n<p;n++){var q=e[n].index;if(c){for(i in b)l=b[i],k=a[i],0<=l&&(k?(m=k.itemSize,g.bindBuffer(g.ARRAY_BUFFER,k.buffer),h(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,4*q*m)):d.defaultAttributeValues&&(2===d.defaultAttributeValues[i].length?g.vertexAttrib2fv(l,d.defaultAttributeValues[i]):3===d.defaultAttributeValues[i].length&&g.vertexAttrib3fv(l,d.defaultAttributeValues[i])));g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,f.buffer)}g.drawElements(g.TRIANGLES,
e[n].count,g.UNSIGNED_SHORT,2*e[n].start);I.info.render.calls++;I.info.render.vertices+=e[n].count;I.info.render.faces+=e[n].count/3}}else{if(c)for(i in b)"index"!==i&&(l=b[i],k=a[i],0<=l&&(k?(m=k.itemSize,g.bindBuffer(g.ARRAY_BUFFER,k.buffer),h(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[i]&&(2===d.defaultAttributeValues[i].length?g.vertexAttrib2fv(l,d.defaultAttributeValues[i]):3===d.defaultAttributeValues[i].length&&g.vertexAttrib3fv(l,d.defaultAttributeValues[i]))));
d=e.attributes.position;g.drawArrays(g.TRIANGLES,0,d.numItems/3);I.info.render.calls++;I.info.render.vertices+=d.numItems/3;I.info.render.faces+=d.numItems/3/3}else if(f instanceof THREE.ParticleSystem){if(c)for(i in b)l=b[i],k=a[i],0<=l&&(k?(m=k.itemSize,g.bindBuffer(g.ARRAY_BUFFER,k.buffer),h(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[i]&&(2===d.defaultAttributeValues[i].length?g.vertexAttrib2fv(l,d.defaultAttributeValues[i]):3===d.defaultAttributeValues[i].length&&
g.vertexAttrib3fv(l,d.defaultAttributeValues[i])));d=a.position;g.drawArrays(g.POINTS,0,d.numItems/3);I.info.render.calls++;I.info.render.points+=d.numItems/3}else if(f instanceof THREE.Line){if(c)for(i in b)l=b[i],k=a[i],0<=l&&(k?(m=k.itemSize,g.bindBuffer(g.ARRAY_BUFFER,k.buffer),h(l),g.vertexAttribPointer(l,m,g.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[i]&&(2===d.defaultAttributeValues[i].length?g.vertexAttrib2fv(l,d.defaultAttributeValues[i]):3===d.defaultAttributeValues[i].length&&
g.vertexAttrib3fv(l,d.defaultAttributeValues[i])));i=f.type===THREE.LineStrip?g.LINE_STRIP:g.LINES;M(d.linewidth);d=a.position;g.drawArrays(i,0,d.numItems/3);I.info.render.calls++;I.info.render.points+=d.numItems}}};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var k,i,c=B(a,b,c,d,f),a=c.attributes,b=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Fa&&(Fa=c,b=!0);b&&j();if(!d.morphTargets&&0<=a.position)b&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer),h(a.position),g.vertexAttribPointer(a.position,
3,g.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),h(c.position),g.vertexAttribPointer(c.position,3,g.FLOAT,!1,0,0)):0<=c.position&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglVertexBuffer),h(c.position),g.vertexAttribPointer(c.position,3,g.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var l=0;i=f.morphTargetForcedOrder;for(k=f.morphTargetInfluences;l<d.numSupportedMorphTargets&&
l<i.length;)0<=c["morphTarget"+l]&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i[l]]),h(c["morphTarget"+l]),g.vertexAttribPointer(c["morphTarget"+l],3,g.FLOAT,!1,0,0)),0<=c["morphNormal"+l]&&d.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[i[l]]),h(c["morphNormal"+l]),g.vertexAttribPointer(c["morphNormal"+l],3,g.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=k[i[l]],l++}else{i=[];k=f.morphTargetInfluences;var n,p=k.length;for(n=0;n<p;n++)l=k[n],0<l&&i.push([l,
n]);i.length>d.numSupportedMorphTargets?(i.sort(m),i.length=d.numSupportedMorphTargets):i.length>d.numSupportedMorphNormals?i.sort(m):0===i.length&&i.push([0,0]);for(l=0;l<d.numSupportedMorphTargets;)i[l]?(n=i[l][1],0<=c["morphTarget"+l]&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n]),h(c["morphTarget"+l]),g.vertexAttribPointer(c["morphTarget"+l],3,g.FLOAT,!1,0,0)),0<=c["morphNormal"+l]&&d.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[n]),h(c["morphNormal"+
l]),g.vertexAttribPointer(c["morphNormal"+l],3,g.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=k[n]):f.__webglMorphTargetInfluences[l]=0,l++}null!==d.program.uniforms.morphTargetInfluences&&g.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(b){if(e.__webglCustomAttributesList){k=0;for(i=e.__webglCustomAttributesList.length;k<i;k++)c=e.__webglCustomAttributesList[k],0<=a[c.buffer.belongsToAttribute]&&(g.bindBuffer(g.ARRAY_BUFFER,c.buffer),h(a[c.buffer.belongsToAttribute]),
g.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,g.FLOAT,!1,0,0))}0<=a.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglColorBuffer),h(a.color),g.vertexAttribPointer(a.color,3,g.FLOAT,!1,0,0)):d.defaultAttributeValues&&g.vertexAttrib3fv(a.color,d.defaultAttributeValues.color));0<=a.normal&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglNormalBuffer),h(a.normal),g.vertexAttribPointer(a.normal,3,g.FLOAT,!1,0,0));0<=a.tangent&&(g.bindBuffer(g.ARRAY_BUFFER,
e.__webglTangentBuffer),h(a.tangent),g.vertexAttribPointer(a.tangent,4,g.FLOAT,!1,0,0));0<=a.uv&&(f.geometry.faceVertexUvs[0]?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglUVBuffer),h(a.uv),g.vertexAttribPointer(a.uv,2,g.FLOAT,!1,0,0)):d.defaultAttributeValues&&g.vertexAttrib2fv(a.uv,d.defaultAttributeValues.uv));0<=a.uv2&&(f.geometry.faceVertexUvs[1]?(g.bindBuffer(g.ARRAY_BUFFER,e.__webglUV2Buffer),h(a.uv2),g.vertexAttribPointer(a.uv2,2,g.FLOAT,!1,0,0)):d.defaultAttributeValues&&g.vertexAttrib2fv(a.uv2,
d.defaultAttributeValues.uv2));d.skinning&&(0<=a.skinIndex&&0<=a.skinWeight)&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),h(a.skinIndex),g.vertexAttribPointer(a.skinIndex,4,g.FLOAT,!1,0,0),g.bindBuffer(g.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),h(a.skinWeight),g.vertexAttribPointer(a.skinWeight,4,g.FLOAT,!1,0,0));0<=a.lineDistance&&(g.bindBuffer(g.ARRAY_BUFFER,e.__webglLineDistanceBuffer),h(a.lineDistance),g.vertexAttribPointer(a.lineDistance,1,g.FLOAT,!1,0,0))}f instanceof THREE.Mesh?
(d.wireframe?(M(d.wireframeLinewidth),b&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),g.drawElements(g.LINES,e.__webglLineCount,g.UNSIGNED_SHORT,0)):(b&&g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),g.drawElements(g.TRIANGLES,e.__webglFaceCount,g.UNSIGNED_SHORT,0)),I.info.render.calls++,I.info.render.vertices+=e.__webglFaceCount,I.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?g.LINE_STRIP:g.LINES,M(d.linewidth),g.drawArrays(f,0,
e.__webglLineCount),I.info.render.calls++):f instanceof THREE.ParticleSystem&&(g.drawArrays(g.POINTS,0,e.__webglParticleCount),I.info.render.calls++,I.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,h,j,i=a.__lights,l=a.fog;Va=-1;Ra=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);
Ca.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);wb.setFromMatrix(Ca);this.autoUpdateObjects&&this.initWebGLObjects(a);q(this.renderPluginsPre,a,b);I.info.render.calls=0;I.info.render.vertices=0;I.info.render.faces=0;I.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);j=a.__webglObjects;d=0;for(e=j.length;d<e;d++)if(f=j[d],h=f.object,f.id=d,f.render=!1,h.visible&&(!(h instanceof THREE.Mesh||h instanceof
THREE.ParticleSystem)||!h.frustumCulled||wb.intersectsObject(h))){var m=h;m._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,m.matrixWorld);m._normalMatrix.getNormalMatrix(m._modelViewMatrix);var m=f,n=m.buffer,p=void 0,r=p=void 0,r=m.object.material;if(r instanceof THREE.MeshFaceMaterial)p=n.materialIndex,p=r.materials[p],p.transparent?(m.transparent=p,m.opaque=null):(m.opaque=p,m.transparent=null);else if(p=r)p.transparent?(m.transparent=p,m.opaque=null):(m.opaque=p,m.transparent=null);f.render=
!0;!0===this.sortObjects&&(null!==h.renderDepth?f.z=h.renderDepth:(ja.setFromMatrixPosition(h.matrixWorld),ja.applyProjection(Ca),f.z=ja.z))}this.sortObjects&&j.sort(k);j=a.__webglObjectsImmediate;d=0;for(e=j.length;d<e;d++)f=j[d],h=f.object,h.visible&&(h._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,h.matrixWorld),h._normalMatrix.getNormalMatrix(h._modelViewMatrix),h=f.object.material,h.transparent?(f.transparent=h,f.opaque=null):(f.opaque=h,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,
this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),y(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),t(a.__webglObjects,!1,"",b,i,l,!0,d),z(a.__webglObjectsImmediate,"",b,i,l,!1,d)):(d=null,this.setBlending(THREE.NoBlending),t(a.__webglObjects,!0,"opaque",b,i,l,!1,d),z(a.__webglObjectsImmediate,"opaque",b,i,l,!1,d),t(a.__webglObjects,!1,"transparent",b,i,l,!0,d),z(a.__webglObjectsImmediate,"transparent",b,
i,l,!0,d));q(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(g.bindTexture(g.TEXTURE_CUBE_MAP,c.__webglTexture),g.generateMipmap(g.TEXTURE_CUBE_MAP),g.bindTexture(g.TEXTURE_CUBE_MAP,null)):(g.bindTexture(g.TEXTURE_2D,c.__webglTexture),g.generateMipmap(g.TEXTURE_2D),g.bindTexture(g.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,
b,c,d,e){var f=B(a,b,c,d,e);Fa=-1;I.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,g,wb):e.render(function(a){I.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;)u(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)l(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,h=
a.__webglObjects.length;b<h;b++){var k=a.__webglObjects[b].object;void 0===k.__webglInit&&(void 0!==k.__webglActive&&l(k,a),u(k,a));var j=k,i=j.geometry,q=void 0,r=void 0,t=void 0;if(i instanceof THREE.BufferGeometry){var s=g.DYNAMIC_DRAW,x=!i.dynamic,z=i.attributes,y=void 0,w=void 0;for(y in z)w=z[y],w.needsUpdate&&("index"===y?(g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,w.buffer),g.bufferData(g.ELEMENT_ARRAY_BUFFER,w.array,s)):(g.bindBuffer(g.ARRAY_BUFFER,w.buffer),g.bufferData(g.ARRAY_BUFFER,w.array,
s)),w.needsUpdate=!1),x&&!w.dynamic&&(w.array=null)}else if(j instanceof THREE.Mesh){for(var B=0,D=i.geometryGroupsList.length;B<D;B++)if(q=i.geometryGroupsList[B],t=d(j,q),i.buffersNeedUpdate&&c(q,j),r=t.attributes&&n(t),i.verticesNeedUpdate||i.morphTargetsNeedUpdate||i.elementsNeedUpdate||i.uvsNeedUpdate||i.normalsNeedUpdate||i.colorsNeedUpdate||i.tangentsNeedUpdate||r){var v=q,C=j,H=g.DYNAMIC_DRAW,I=!i.dynamic,K=t;if(v.__inittedArrays){var L=e(K),M=K.vertexColors?K.vertexColors:!1,N=f(K),G=L===
THREE.SmoothShading,J=void 0,F=void 0,aa=void 0,X=void 0,U=void 0,V=void 0,W=void 0,Z=void 0,$=void 0,fa=void 0,ha=void 0,R=void 0,S=void 0,Q=void 0,la=void 0,ia=void 0,ka=void 0,oa=void 0,pa=void 0,qa=void 0,ra=void 0,ta=void 0,ua=void 0,va=void 0,wa=void 0,Aa=void 0,Ba=void 0,Da=void 0,Fa=void 0,sa=void 0,Wa=void 0,Ia=void 0,Oa=void 0,Xa=void 0,Ga=void 0,ab=void 0,db=void 0,eb=void 0,Va=void 0,Ya=void 0,Za=0,$a=0,Pa=0,Qa=0,Ra=0,fb=0,Ha=0,tb=0,Sa=0,ga=0,ma=0,E=0,Ea=void 0,gb=v.__vertexArray,cb=v.__uvArray,
nb=v.__uv2Array,yb=v.__normalArray,Ka=v.__tangentArray,hb=v.__colorArray,La=v.__skinIndexArray,Ma=v.__skinWeightArray,rb=v.__morphTargetsArrays,sb=v.__morphNormalsArrays,ob=v.__webglCustomAttributesList,A=void 0,bb=v.__faceArray,zb=v.__lineArray,xa=C.geometry,wb=xa.elementsNeedUpdate,vb=xa.uvsNeedUpdate,Cb=xa.normalsNeedUpdate,Hb=xa.tangentsNeedUpdate,Jb=xa.colorsNeedUpdate,Mb=xa.morphTargetsNeedUpdate,xb=xa.vertices,Y=v.faces3,ib=xa.faces,Fb=xa.faceVertexUvs[0],Gb=xa.faceVertexUvs[1],gc=xa.skinIndices,
Wb=xa.skinWeights,Xb=xa.morphTargets,Ib=xa.morphNormals;if(xa.verticesNeedUpdate){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],R=xb[X.a],S=xb[X.b],Q=xb[X.c],gb[$a]=R.x,gb[$a+1]=R.y,gb[$a+2]=R.z,gb[$a+3]=S.x,gb[$a+4]=S.y,gb[$a+5]=S.z,gb[$a+6]=Q.x,gb[$a+7]=Q.y,gb[$a+8]=Q.z,$a+=9;g.bindBuffer(g.ARRAY_BUFFER,v.__webglVertexBuffer);g.bufferData(g.ARRAY_BUFFER,gb,H)}if(Mb){Ga=0;for(ab=Xb.length;Ga<ab;Ga++){J=ma=0;for(F=Y.length;J<F;J++)Va=Y[J],X=ib[Va],R=Xb[Ga].vertices[X.a],S=Xb[Ga].vertices[X.b],Q=Xb[Ga].vertices[X.c],
db=rb[Ga],db[ma]=R.x,db[ma+1]=R.y,db[ma+2]=R.z,db[ma+3]=S.x,db[ma+4]=S.y,db[ma+5]=S.z,db[ma+6]=Q.x,db[ma+7]=Q.y,db[ma+8]=Q.z,K.morphNormals&&(G?(Ya=Ib[Ga].vertexNormals[Va],oa=Ya.a,pa=Ya.b,qa=Ya.c):qa=pa=oa=Ib[Ga].faceNormals[Va],eb=sb[Ga],eb[ma]=oa.x,eb[ma+1]=oa.y,eb[ma+2]=oa.z,eb[ma+3]=pa.x,eb[ma+4]=pa.y,eb[ma+5]=pa.z,eb[ma+6]=qa.x,eb[ma+7]=qa.y,eb[ma+8]=qa.z),ma+=9;g.bindBuffer(g.ARRAY_BUFFER,v.__webglMorphTargetsBuffers[Ga]);g.bufferData(g.ARRAY_BUFFER,rb[Ga],H);K.morphNormals&&(g.bindBuffer(g.ARRAY_BUFFER,
v.__webglMorphNormalsBuffers[Ga]),g.bufferData(g.ARRAY_BUFFER,sb[Ga],H))}}if(Wb.length){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],va=Wb[X.a],wa=Wb[X.b],Aa=Wb[X.c],Ma[ga]=va.x,Ma[ga+1]=va.y,Ma[ga+2]=va.z,Ma[ga+3]=va.w,Ma[ga+4]=wa.x,Ma[ga+5]=wa.y,Ma[ga+6]=wa.z,Ma[ga+7]=wa.w,Ma[ga+8]=Aa.x,Ma[ga+9]=Aa.y,Ma[ga+10]=Aa.z,Ma[ga+11]=Aa.w,Ba=gc[X.a],Da=gc[X.b],Fa=gc[X.c],La[ga]=Ba.x,La[ga+1]=Ba.y,La[ga+2]=Ba.z,La[ga+3]=Ba.w,La[ga+4]=Da.x,La[ga+5]=Da.y,La[ga+6]=Da.z,La[ga+7]=Da.w,La[ga+8]=Fa.x,La[ga+9]=Fa.y,La[ga+
10]=Fa.z,La[ga+11]=Fa.w,ga+=12;0<ga&&(g.bindBuffer(g.ARRAY_BUFFER,v.__webglSkinIndicesBuffer),g.bufferData(g.ARRAY_BUFFER,La,H),g.bindBuffer(g.ARRAY_BUFFER,v.__webglSkinWeightsBuffer),g.bufferData(g.ARRAY_BUFFER,Ma,H))}if(Jb&&M){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],W=X.vertexColors,Z=X.color,3===W.length&&M===THREE.VertexColors?(ra=W[0],ta=W[1],ua=W[2]):ua=ta=ra=Z,hb[Sa]=ra.r,hb[Sa+1]=ra.g,hb[Sa+2]=ra.b,hb[Sa+3]=ta.r,hb[Sa+4]=ta.g,hb[Sa+5]=ta.b,hb[Sa+6]=ua.r,hb[Sa+7]=ua.g,hb[Sa+8]=ua.b,Sa+=9;0<Sa&&
(g.bindBuffer(g.ARRAY_BUFFER,v.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,hb,H))}if(Hb&&xa.hasTangents){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],$=X.vertexTangents,la=$[0],ia=$[1],ka=$[2],Ka[Ha]=la.x,Ka[Ha+1]=la.y,Ka[Ha+2]=la.z,Ka[Ha+3]=la.w,Ka[Ha+4]=ia.x,Ka[Ha+5]=ia.y,Ka[Ha+6]=ia.z,Ka[Ha+7]=ia.w,Ka[Ha+8]=ka.x,Ka[Ha+9]=ka.y,Ka[Ha+10]=ka.z,Ka[Ha+11]=ka.w,Ha+=12;g.bindBuffer(g.ARRAY_BUFFER,v.__webglTangentBuffer);g.bufferData(g.ARRAY_BUFFER,Ka,H)}if(Cb&&L){J=0;for(F=Y.length;J<F;J++)if(X=ib[Y[J]],
U=X.vertexNormals,V=X.normal,3===U.length&&G)for(sa=0;3>sa;sa++)Ia=U[sa],yb[fb]=Ia.x,yb[fb+1]=Ia.y,yb[fb+2]=Ia.z,fb+=3;else for(sa=0;3>sa;sa++)yb[fb]=V.x,yb[fb+1]=V.y,yb[fb+2]=V.z,fb+=3;g.bindBuffer(g.ARRAY_BUFFER,v.__webglNormalBuffer);g.bufferData(g.ARRAY_BUFFER,yb,H)}if(vb&&Fb&&N){J=0;for(F=Y.length;J<F;J++)if(aa=Y[J],fa=Fb[aa],void 0!==fa)for(sa=0;3>sa;sa++)Oa=fa[sa],cb[Pa]=Oa.x,cb[Pa+1]=Oa.y,Pa+=2;0<Pa&&(g.bindBuffer(g.ARRAY_BUFFER,v.__webglUVBuffer),g.bufferData(g.ARRAY_BUFFER,cb,H))}if(vb&&
Gb&&N){J=0;for(F=Y.length;J<F;J++)if(aa=Y[J],ha=Gb[aa],void 0!==ha)for(sa=0;3>sa;sa++)Xa=ha[sa],nb[Qa]=Xa.x,nb[Qa+1]=Xa.y,Qa+=2;0<Qa&&(g.bindBuffer(g.ARRAY_BUFFER,v.__webglUV2Buffer),g.bufferData(g.ARRAY_BUFFER,nb,H))}if(wb){J=0;for(F=Y.length;J<F;J++)bb[Ra]=Za,bb[Ra+1]=Za+1,bb[Ra+2]=Za+2,Ra+=3,zb[tb]=Za,zb[tb+1]=Za+1,zb[tb+2]=Za,zb[tb+3]=Za+2,zb[tb+4]=Za+1,zb[tb+5]=Za+2,tb+=6,Za+=3;g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,v.__webglFaceBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,bb,H);g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,
v.__webglLineBuffer);g.bufferData(g.ELEMENT_ARRAY_BUFFER,zb,H)}if(ob){sa=0;for(Wa=ob.length;sa<Wa;sa++)if(A=ob[sa],A.__original.needsUpdate){E=0;if(1===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],A.array[E]=A.value[X.a],A.array[E+1]=A.value[X.b],A.array[E+2]=A.value[X.c],E+=3}else{if("faces"===A.boundTo){J=0;for(F=Y.length;J<F;J++)Ea=A.value[Y[J]],A.array[E]=Ea,A.array[E+1]=Ea,A.array[E+2]=Ea,E+=3}}else if(2===A.size)if(void 0===A.boundTo||"vertices"===
A.boundTo){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],R=A.value[X.a],S=A.value[X.b],Q=A.value[X.c],A.array[E]=R.x,A.array[E+1]=R.y,A.array[E+2]=S.x,A.array[E+3]=S.y,A.array[E+4]=Q.x,A.array[E+5]=Q.y,E+=6}else{if("faces"===A.boundTo){J=0;for(F=Y.length;J<F;J++)Q=S=R=Ea=A.value[Y[J]],A.array[E]=R.x,A.array[E+1]=R.y,A.array[E+2]=S.x,A.array[E+3]=S.y,A.array[E+4]=Q.x,A.array[E+5]=Q.y,E+=6}}else if(3===A.size){var ea;ea="c"===A.type?["r","g","b"]:["x","y","z"];if(void 0===A.boundTo||"vertices"===A.boundTo){J=
0;for(F=Y.length;J<F;J++)X=ib[Y[J]],R=A.value[X.a],S=A.value[X.b],Q=A.value[X.c],A.array[E]=R[ea[0]],A.array[E+1]=R[ea[1]],A.array[E+2]=R[ea[2]],A.array[E+3]=S[ea[0]],A.array[E+4]=S[ea[1]],A.array[E+5]=S[ea[2]],A.array[E+6]=Q[ea[0]],A.array[E+7]=Q[ea[1]],A.array[E+8]=Q[ea[2]],E+=9}else if("faces"===A.boundTo){J=0;for(F=Y.length;J<F;J++)Q=S=R=Ea=A.value[Y[J]],A.array[E]=R[ea[0]],A.array[E+1]=R[ea[1]],A.array[E+2]=R[ea[2]],A.array[E+3]=S[ea[0]],A.array[E+4]=S[ea[1]],A.array[E+5]=S[ea[2]],A.array[E+
6]=Q[ea[0]],A.array[E+7]=Q[ea[1]],A.array[E+8]=Q[ea[2]],E+=9}else if("faceVertices"===A.boundTo){J=0;for(F=Y.length;J<F;J++)Ea=A.value[Y[J]],R=Ea[0],S=Ea[1],Q=Ea[2],A.array[E]=R[ea[0]],A.array[E+1]=R[ea[1]],A.array[E+2]=R[ea[2]],A.array[E+3]=S[ea[0]],A.array[E+4]=S[ea[1]],A.array[E+5]=S[ea[2]],A.array[E+6]=Q[ea[0]],A.array[E+7]=Q[ea[1]],A.array[E+8]=Q[ea[2]],E+=9}}else if(4===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){J=0;for(F=Y.length;J<F;J++)X=ib[Y[J]],R=A.value[X.a],S=A.value[X.b],
Q=A.value[X.c],A.array[E]=R.x,A.array[E+1]=R.y,A.array[E+2]=R.z,A.array[E+3]=R.w,A.array[E+4]=S.x,A.array[E+5]=S.y,A.array[E+6]=S.z,A.array[E+7]=S.w,A.array[E+8]=Q.x,A.array[E+9]=Q.y,A.array[E+10]=Q.z,A.array[E+11]=Q.w,E+=12}else if("faces"===A.boundTo){J=0;for(F=Y.length;J<F;J++)Q=S=R=Ea=A.value[Y[J]],A.array[E]=R.x,A.array[E+1]=R.y,A.array[E+2]=R.z,A.array[E+3]=R.w,A.array[E+4]=S.x,A.array[E+5]=S.y,A.array[E+6]=S.z,A.array[E+7]=S.w,A.array[E+8]=Q.x,A.array[E+9]=Q.y,A.array[E+10]=Q.z,A.array[E+11]=
Q.w,E+=12}else if("faceVertices"===A.boundTo){J=0;for(F=Y.length;J<F;J++)Ea=A.value[Y[J]],R=Ea[0],S=Ea[1],Q=Ea[2],A.array[E]=R.x,A.array[E+1]=R.y,A.array[E+2]=R.z,A.array[E+3]=R.w,A.array[E+4]=S.x,A.array[E+5]=S.y,A.array[E+6]=S.z,A.array[E+7]=S.w,A.array[E+8]=Q.x,A.array[E+9]=Q.y,A.array[E+10]=Q.z,A.array[E+11]=Q.w,E+=12}g.bindBuffer(g.ARRAY_BUFFER,A.buffer);g.bufferData(g.ARRAY_BUFFER,A.array,H)}}I&&(delete v.__inittedArrays,delete v.__colorArray,delete v.__normalArray,delete v.__tangentArray,delete v.__uvArray,
delete v.__uv2Array,delete v.__faceArray,delete v.__vertexArray,delete v.__lineArray,delete v.__skinIndexArray,delete v.__skinWeightArray)}}i.verticesNeedUpdate=!1;i.morphTargetsNeedUpdate=!1;i.elementsNeedUpdate=!1;i.uvsNeedUpdate=!1;i.normalsNeedUpdate=!1;i.colorsNeedUpdate=!1;i.tangentsNeedUpdate=!1;i.buffersNeedUpdate=!1;t.attributes&&p(t)}else if(j instanceof THREE.Line){t=d(j,i);r=t.attributes&&n(t);if(i.verticesNeedUpdate||i.colorsNeedUpdate||i.lineDistancesNeedUpdate||r){var Na=i,Yb=g.DYNAMIC_DRAW,
Pb=void 0,Qb=void 0,Rb=void 0,Zb=void 0,da=void 0,$b=void 0,Kb=Na.vertices,Lb=Na.colors,Nb=Na.lineDistances,Tb=Kb.length,Ub=Lb.length,Vb=Nb.length,ac=Na.__vertexArray,bc=Na.__colorArray,Ob=Na.__lineDistanceArray,ec=Na.colorsNeedUpdate,fc=Na.lineDistancesNeedUpdate,hc=Na.__webglCustomAttributesList,cc=void 0,lc=void 0,na=void 0,Db=void 0,ya=void 0,ca=void 0;if(Na.verticesNeedUpdate){for(Pb=0;Pb<Tb;Pb++)Zb=Kb[Pb],da=3*Pb,ac[da]=Zb.x,ac[da+1]=Zb.y,ac[da+2]=Zb.z;g.bindBuffer(g.ARRAY_BUFFER,Na.__webglVertexBuffer);
g.bufferData(g.ARRAY_BUFFER,ac,Yb)}if(ec){for(Qb=0;Qb<Ub;Qb++)$b=Lb[Qb],da=3*Qb,bc[da]=$b.r,bc[da+1]=$b.g,bc[da+2]=$b.b;g.bindBuffer(g.ARRAY_BUFFER,Na.__webglColorBuffer);g.bufferData(g.ARRAY_BUFFER,bc,Yb)}if(fc){for(Rb=0;Rb<Vb;Rb++)Ob[Rb]=Nb[Rb];g.bindBuffer(g.ARRAY_BUFFER,Na.__webglLineDistanceBuffer);g.bufferData(g.ARRAY_BUFFER,Ob,Yb)}if(hc){cc=0;for(lc=hc.length;cc<lc;cc++)if(ca=hc[cc],ca.needsUpdate&&(void 0===ca.boundTo||"vertices"===ca.boundTo)){da=0;Db=ca.value.length;if(1===ca.size)for(na=
0;na<Db;na++)ca.array[na]=ca.value[na];else if(2===ca.size)for(na=0;na<Db;na++)ya=ca.value[na],ca.array[da]=ya.x,ca.array[da+1]=ya.y,da+=2;else if(3===ca.size)if("c"===ca.type)for(na=0;na<Db;na++)ya=ca.value[na],ca.array[da]=ya.r,ca.array[da+1]=ya.g,ca.array[da+2]=ya.b,da+=3;else for(na=0;na<Db;na++)ya=ca.value[na],ca.array[da]=ya.x,ca.array[da+1]=ya.y,ca.array[da+2]=ya.z,da+=3;else if(4===ca.size)for(na=0;na<Db;na++)ya=ca.value[na],ca.array[da]=ya.x,ca.array[da+1]=ya.y,ca.array[da+2]=ya.z,ca.array[da+
3]=ya.w,da+=4;g.bindBuffer(g.ARRAY_BUFFER,ca.buffer);g.bufferData(g.ARRAY_BUFFER,ca.array,Yb)}}}i.verticesNeedUpdate=!1;i.colorsNeedUpdate=!1;i.lineDistancesNeedUpdate=!1;t.attributes&&p(t)}else if(j instanceof THREE.ParticleSystem){t=d(j,i);r=t.attributes&&n(t);if(i.verticesNeedUpdate||i.colorsNeedUpdate||j.sortParticles||r){var jb=i,ic=g.DYNAMIC_DRAW,Sb=j,za=void 0,kb=void 0,lb=void 0,P=void 0,mb=void 0,ub=void 0,dc=jb.vertices,jc=dc.length,kc=jb.colors,mc=kc.length,Ab=jb.__vertexArray,Bb=jb.__colorArray,
pb=jb.__sortArray,nc=jb.verticesNeedUpdate,oc=jb.colorsNeedUpdate,qb=jb.__webglCustomAttributesList,Ta=void 0,Eb=void 0,T=void 0,Ua=void 0,ba=void 0,O=void 0;if(Sb.sortParticles){Ja.copy(Ca);Ja.multiply(Sb.matrixWorld);for(za=0;za<jc;za++)lb=dc[za],ja.copy(lb),ja.applyProjection(Ja),pb[za]=[ja.z,za];pb.sort(m);for(za=0;za<jc;za++)lb=dc[pb[za][1]],P=3*za,Ab[P]=lb.x,Ab[P+1]=lb.y,Ab[P+2]=lb.z;for(kb=0;kb<mc;kb++)P=3*kb,ub=kc[pb[kb][1]],Bb[P]=ub.r,Bb[P+1]=ub.g,Bb[P+2]=ub.b;if(qb){Ta=0;for(Eb=qb.length;Ta<
Eb;Ta++)if(O=qb[Ta],void 0===O.boundTo||"vertices"===O.boundTo)if(P=0,Ua=O.value.length,1===O.size)for(T=0;T<Ua;T++)mb=pb[T][1],O.array[T]=O.value[mb];else if(2===O.size)for(T=0;T<Ua;T++)mb=pb[T][1],ba=O.value[mb],O.array[P]=ba.x,O.array[P+1]=ba.y,P+=2;else if(3===O.size)if("c"===O.type)for(T=0;T<Ua;T++)mb=pb[T][1],ba=O.value[mb],O.array[P]=ba.r,O.array[P+1]=ba.g,O.array[P+2]=ba.b,P+=3;else for(T=0;T<Ua;T++)mb=pb[T][1],ba=O.value[mb],O.array[P]=ba.x,O.array[P+1]=ba.y,O.array[P+2]=ba.z,P+=3;else if(4===
O.size)for(T=0;T<Ua;T++)mb=pb[T][1],ba=O.value[mb],O.array[P]=ba.x,O.array[P+1]=ba.y,O.array[P+2]=ba.z,O.array[P+3]=ba.w,P+=4}}else{if(nc)for(za=0;za<jc;za++)lb=dc[za],P=3*za,Ab[P]=lb.x,Ab[P+1]=lb.y,Ab[P+2]=lb.z;if(oc)for(kb=0;kb<mc;kb++)ub=kc[kb],P=3*kb,Bb[P]=ub.r,Bb[P+1]=ub.g,Bb[P+2]=ub.b;if(qb){Ta=0;for(Eb=qb.length;Ta<Eb;Ta++)if(O=qb[Ta],O.needsUpdate&&(void 0===O.boundTo||"vertices"===O.boundTo))if(Ua=O.value.length,P=0,1===O.size)for(T=0;T<Ua;T++)O.array[T]=O.value[T];else if(2===O.size)for(T=
0;T<Ua;T++)ba=O.value[T],O.array[P]=ba.x,O.array[P+1]=ba.y,P+=2;else if(3===O.size)if("c"===O.type)for(T=0;T<Ua;T++)ba=O.value[T],O.array[P]=ba.r,O.array[P+1]=ba.g,O.array[P+2]=ba.b,P+=3;else for(T=0;T<Ua;T++)ba=O.value[T],O.array[P]=ba.x,O.array[P+1]=ba.y,O.array[P+2]=ba.z,P+=3;else if(4===O.size)for(T=0;T<Ua;T++)ba=O.value[T],O.array[P]=ba.x,O.array[P+1]=ba.y,O.array[P+2]=ba.z,O.array[P+3]=ba.w,P+=4}}if(nc||Sb.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,jb.__webglVertexBuffer),g.bufferData(g.ARRAY_BUFFER,
Ab,ic);if(oc||Sb.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,jb.__webglColorBuffer),g.bufferData(g.ARRAY_BUFFER,Bb,ic);if(qb){Ta=0;for(Eb=qb.length;Ta<Eb;Ta++)if(O=qb[Ta],O.needsUpdate||Sb.sortParticles)g.bindBuffer(g.ARRAY_BUFFER,O.buffer),g.bufferData(g.ARRAY_BUFFER,O.array,ic)}}i.verticesNeedUpdate=!1;i.colorsNeedUpdate=!1;t.attributes&&p(t)}}};this.initMaterial=function(a,b,c,d){var e,f,h,j;a.addEventListener("dispose",Ob);var k,i,l,m,n;a instanceof THREE.MeshDepthMaterial?n="depth":a instanceof
THREE.MeshNormalMaterial?n="normal":a instanceof THREE.MeshBasicMaterial?n="basic":a instanceof THREE.MeshLambertMaterial?n="lambert":a instanceof THREE.MeshPhongMaterial?n="phong":a instanceof THREE.LineBasicMaterial?n="basic":a instanceof THREE.LineDashedMaterial?n="dashed":a instanceof THREE.ParticleSystemMaterial&&(n="particle_basic");if(n){var p=THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(p.uniforms);a.vertexShader=p.vertexShader;a.fragmentShader=p.fragmentShader}var q=e=0,r=0,t=
p=0;for(f=b.length;t<f;t++)h=b[t],h.onlyShadow||(h instanceof THREE.DirectionalLight&&e++,h instanceof THREE.PointLight&&q++,h instanceof THREE.SpotLight&&r++,h instanceof THREE.HemisphereLight&&p++);f=q;h=r;j=p;r=p=0;for(q=b.length;r<q;r++)t=b[r],t.castShadow&&(t instanceof THREE.SpotLight&&p++,t instanceof THREE.DirectionalLight&&!t.shadowCascade&&p++);m=p;Hb&&d&&d.useVertexTexture?l=1024:(b=g.getParameter(g.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&
(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),l=b);a:{var r=a.fragmentShader,q=a.vertexShader,p=a.uniforms,b=a.attributes,t=a.defines,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:l,useVertexTexture:Hb&&d&&d.useVertexTexture,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:h,maxHemiLights:j,maxShadows:m,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,
doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},d=a.index0AttributeName,s,u,v;e=[];n?e.push(n):(e.push(r),e.push(q));for(u in t)e.push(u),e.push(t[u]);for(s in c)e.push(s),e.push(c[s]);n=e.join();s=0;for(u=Z.length;s<u;s++)if(e=Z[s],e.code===n){e.usedTimes++;i=e.program;break a}s="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?s="SHADOWMAP_TYPE_PCF":c.shadowMapType===THREE.PCFSoftShadowMap&&(s="SHADOWMAP_TYPE_PCF_SOFT");u=[];for(v in t)e=t[v],!1!==e&&(e="#define "+
v+" "+e,u.push(e));e=u.join("\n");v=g.createProgram();u=["precision "+F+" float;","precision "+F+" int;",e,xb?"#define VERTEX_TEXTURES":"",I.gammaInput?"#define GAMMA_INPUT":"",I.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":
"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+s:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
s=["precision "+F+" float;","precision "+F+" int;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",e,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",I.gammaInput?"#define GAMMA_INPUT":"",I.gammaOutput?"#define GAMMA_OUTPUT":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&
c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":
"",c.shadowMapEnabled?"#define "+s:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");u=K("vertex",u+q);s=K("fragment",s+r);g.attachShader(v,u);g.attachShader(v,s);d&&g.bindAttribLocation(v,0,d);g.linkProgram(v);g.getProgramParameter(v,g.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+g.getProgramParameter(v,g.VALIDATE_STATUS)+", gl error ["+g.getError()+
"]"),console.error("Program Info Log: "+g.getProgramInfoLog(v)));g.deleteShader(s);g.deleteShader(u);v.uniforms={};v.attributes={};var w;s="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?(s.push("boneTexture"),s.push("boneTextureWidth"),s.push("boneTextureHeight")):s.push("boneGlobalMatrices");for(w in p)s.push(w);w=s;s=0;for(u=w.length;s<u;s++)p=w[s],v.uniforms[p]=g.getUniformLocation(v,p);s="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");
for(w=0;w<c.maxMorphTargets;w++)s.push("morphTarget"+w);for(w=0;w<c.maxMorphNormals;w++)s.push("morphNormal"+w);for(i in b)s.push(i);i=s;w=0;for(b=i.length;w<b;w++)s=i[w],v.attributes[s]=g.getAttribLocation(v,s);v.id=pa++;Z.push({program:v,code:n,usedTimes:1});I.info.memory.programs=Z.length;i=v}a.program=i;w=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(i=0;i<this.maxMorphTargets;i++)v=b+i,0<=w[v]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=
0;b="morphNormal";for(i=0;i<this.maxMorphNormals;i++)v=b+i,0<=w[v]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(k in a.uniforms)a.uniformsList.push([a.uniforms[k],k])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?g.disable(g.CULL_FACE):(b===THREE.FrontFaceDirectionCW?g.frontFace(g.CW):g.frontFace(g.CCW),a===THREE.CullFaceBack?g.cullFace(g.BACK):a===THREE.CullFaceFront?g.cullFace(g.FRONT):g.cullFace(g.FRONT_AND_BACK),g.enable(g.CULL_FACE))};this.setMaterialFaces=function(a){var b=
a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;rb!==b&&(b?g.disable(g.CULL_FACE):g.enable(g.CULL_FACE),rb=b);U!==a&&(a?g.frontFace(g.CW):g.frontFace(g.CCW),U=a)};this.setDepthTest=function(a){$!==a&&(a?g.enable(g.DEPTH_TEST):g.disable(g.DEPTH_TEST),$=a)};this.setDepthWrite=function(a){Aa!==a&&(g.depthMask(a),Aa=a)};this.setBlending=function(a,b,c,d){a!==sb&&(a===THREE.NoBlending?g.disable(g.BLEND):a===THREE.AdditiveBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.SRC_ALPHA,
g.ONE)):a===THREE.SubtractiveBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(g.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.SRC_COLOR)):a===THREE.CustomBlending?g.enable(g.BLEND):(g.enable(g.BLEND),g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA,g.ONE,g.ONE_MINUS_SRC_ALPHA)),sb=a);if(a===THREE.CustomBlending){if(b!==V&&(g.blendEquation(L(b)),V=b),
c!==ab||d!==W)g.blendFunc(L(c),L(d)),ab=c,W=d}else W=ab=V=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Jb),a.__webglTexture=g.createTexture(),I.info.memory.textures++);g.activeTexture(g.TEXTURE0+b);g.bindTexture(g.TEXTURE_2D,a.__webglTexture);g.pixelStorei(g.UNPACK_FLIP_Y_WEBGL,a.flipY);g.pixelStorei(g.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);g.pixelStorei(g.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===(c.width&
c.width-1)&&0===(c.height&c.height-1),e=L(a.format),f=L(a.type);w(g.TEXTURE_2D,a,d);var h=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<h.length&&d){for(var i=0,j=h.length;i<j;i++)c=h[i],g.texImage2D(g.TEXTURE_2D,i,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else g.texImage2D(g.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){i=0;for(j=h.length;i<j;i++)c=h[i],a.format!==THREE.RGBAFormat?g.compressedTexImage2D(g.TEXTURE_2D,i,e,c.width,c.height,
0,c.data):g.texImage2D(g.TEXTURE_2D,i,e,c.width,c.height,0,e,f,c.data)}else if(0<h.length&&d){i=0;for(j=h.length;i<j;i++)c=h[i],g.texImage2D(g.TEXTURE_2D,i,e,e,f,c);a.generateMipmaps=!1}else g.texImage2D(g.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&g.generateMipmap(g.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else g.activeTexture(g.TEXTURE0+b),g.bindTexture(g.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===
a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",Vb);a.__webglTexture=g.createTexture();I.info.memory.textures++;var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=L(a.format),e=L(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];g.bindTexture(g.TEXTURE_CUBE_MAP,a.__webglTexture);w(g.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=g.createFramebuffer();a.__webglRenderbuffer[f]=g.createRenderbuffer();
g.texImage2D(g.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var h=a,i=g.TEXTURE_CUBE_MAP_POSITIVE_X+f;g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer[f]);g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,i,h.__webglTexture,0);N(a.__webglRenderbuffer[f],a)}c&&g.generateMipmap(g.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=g.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:g.createRenderbuffer(),g.bindTexture(g.TEXTURE_2D,a.__webglTexture),
w(g.TEXTURE_2D,a,c),g.texImage2D(g.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=g.TEXTURE_2D,g.bindFramebuffer(g.FRAMEBUFFER,a.__webglFramebuffer),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_ATTACHMENT,g.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&g.framebufferRenderbuffer(g.FRAMEBUFFER,g.DEPTH_STENCIL_ATTACHMENT,g.RENDERBUFFER,a.__webglRenderbuffer):
N(a.__webglRenderbuffer,a),c&&g.generateMipmap(g.TEXTURE_2D);b?g.bindTexture(g.TEXTURE_CUBE_MAP,null):g.bindTexture(g.TEXTURE_2D,null);g.bindRenderbuffer(g.RENDERBUFFER,null);g.bindFramebuffer(g.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=qa,a=Oa,d=Ba,e=ra);b!==ob&&(g.bindFramebuffer(g.FRAMEBUFFER,b),g.viewport(d,e,c,a),ob=b);Pa=c;Qa=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;
return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=
0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,h,j,k){a.set(h,j,k);c.unprojectVector(a,b);d=e.pointMap[d];if(void 0!==d){h=0;for(j=d.length;h<j;h++)e.geometry.vertices[d[h]].copy(a)}}var e=this;b.projectionMatrix.copy(this.camera.projectionMatrix);d("c",0,0,-1);d("t",0,0,1);d("n1",-1,-1,-1);d("n2",1,-1,-1);d("n3",-1,1,-1);d("n4",1,1,-1);d("f1",-1,-1,1);d("f2",1,-1,1);d("f3",-1,1,1);d("f4",1,1,1);d("u1",
0.7,1.1,-1);d("u2",-0.7,1.1,-1);d("u3",0,2,-1);d("cf1",-1,0,1);d("cf2",1,0,1);d("cf3",0,-1,1);d("cf4",0,1,1);d("cn1",-1,0,-1);d("cn2",1,0,-1);d("cn3",0,-1,-1);d("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;var b=b||1,c=new THREE.PlaneGeometry(b,b),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(c,d);this.add(this.lightPlane);c=new THREE.Geometry;c.vertices.push(new THREE.Vector3);c.vertices.push(new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});
d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);
this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};
THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),h="precision "+c+" float;\n";b.shaderSource(e,h+a.fragmentShader);b.shaderSource(f,h+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,e,f,h,j,k,m,q,t,z,u;this.init=function(r){b=r.context;c=r;d=r.getPrecision();e=new Float32Array(16);f=new Uint16Array(6);r=0;e[r++]=-1;e[r++]=-1;
e[r++]=0;e[r++]=0;e[r++]=1;e[r++]=-1;e[r++]=1;e[r++]=0;e[r++]=1;e[r++]=1;e[r++]=1;e[r++]=1;e[r++]=-1;e[r++]=1;e[r++]=0;e[r++]=1;r=0;f[r++]=0;f[r++]=1;f[r++]=2;f[r++]=0;f[r++]=2;f[r++]=3;h=b.createBuffer();j=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,h);b.bufferData(b.ARRAY_BUFFER,e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,j);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);k=b.createTexture();m=b.createTexture();b.bindTexture(b.TEXTURE_2D,k);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,m);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(q=!1,t=a(THREE.ShaderFlares.lensFlare,d)):(q=!0,t=a(THREE.ShaderFlares.lensFlareVertexTexture,d));z={};u={};z.vertex=b.getAttribLocation(t,"position");z.uv=b.getAttribLocation(t,"uv");u.renderType=b.getUniformLocation(t,"renderType");u.map=b.getUniformLocation(t,"map");u.occlusionMap=b.getUniformLocation(t,"occlusionMap");u.opacity=
b.getUniformLocation(t,"opacity");u.color=b.getUniformLocation(t,"color");u.scale=b.getUniformLocation(t,"scale");u.rotation=b.getUniformLocation(t,"rotation");u.screenPosition=b.getUniformLocation(t,"screenPosition")};this.render=function(a,d,e,f){var a=a.__webglFlares,i=a.length;if(i){var s=new THREE.Vector3,B=f/e,C=0.5*e,G=0.5*f,x=16/f,M=new THREE.Vector2(x*B,x),y=new THREE.Vector3(1,1,0),H=new THREE.Vector2(1,1),K=u,x=z;b.useProgram(t);b.enableVertexAttribArray(z.vertex);b.enableVertexAttribArray(z.uv);
b.uniform1i(K.occlusionMap,0);b.uniform1i(K.map,1);b.bindBuffer(b.ARRAY_BUFFER,h);b.vertexAttribPointer(x.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(x.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,j);b.disable(b.CULL_FACE);b.depthMask(!1);var w,N,D,L,v;for(w=0;w<i;w++)if(x=16/f,M.set(x*B,x),L=a[w],s.set(L.matrixWorld.elements[12],L.matrixWorld.elements[13],L.matrixWorld.elements[14]),s.applyMatrix4(d.matrixWorldInverse),s.applyProjection(d.projectionMatrix),y.copy(s),H.x=y.x*C+C,
H.y=y.y*G+G,q||0<H.x&&H.x<e&&0<H.y&&H.y<f){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,k);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,H.x-8,H.y-8,16,16,0);b.uniform1i(K.renderType,0);b.uniform2f(K.scale,M.x,M.y);b.uniform3f(K.screenPosition,y.x,y.y,y.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,m);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,H.x-8,H.y-8,16,16,0);b.uniform1i(K.renderType,1);b.disable(b.DEPTH_TEST);
b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,k);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);L.positionScreen.copy(y);L.customUpdateCallback?L.customUpdateCallback(L):L.updateLensFlares();b.uniform1i(K.renderType,2);b.enable(b.BLEND);N=0;for(D=L.lensFlares.length;N<D;N++)v=L.lensFlares[N],0.001<v.opacity&&0.001<v.scale&&(y.x=v.x,y.y=v.y,y.z=v.z,x=v.size*v.scale/f,M.x=x*B,M.y=x,b.uniform3f(K.screenPosition,y.x,y.y,y.z),b.uniform2f(K.scale,M.x,M.y),b.uniform1f(K.rotation,v.rotation),b.uniform1f(K.opacity,
v.opacity),b.uniform3f(K.color,v.color.r,v.color.g,v.color.b),c.setBlending(v.blending,v.blendEquation,v.blendSrc,v.blendDst),c.setTexture(v.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,h=new THREE.Frustum,j=new THREE.Matrix4,k=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3;this.init=function(h){a=h.context;b=h;var h=THREE.ShaderLib.depthRGBA,j=THREE.UniformsUtils.clone(h.uniforms);c=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:j});d=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:j,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,
vertexShader:h.vertexShader,uniforms:j,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:j,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(t,z){var u,r,n,p,l,i,s,B,C,G=[];p=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);u=0;for(r=t.__lights.length;u<r;u++)if(n=t.__lights[u],n.castShadow)if(n instanceof THREE.DirectionalLight&&n.shadowCascade)for(l=0;l<n.shadowCascadeCount;l++){var x;if(n.shadowCascadeArray[l])x=n.shadowCascadeArray[l];else{C=n;s=l;x=new THREE.DirectionalLight;x.isVirtual=!0;x.onlyShadow=!0;x.castShadow=!0;x.shadowCameraNear=C.shadowCameraNear;x.shadowCameraFar=C.shadowCameraFar;x.shadowCameraLeft=C.shadowCameraLeft;x.shadowCameraRight=C.shadowCameraRight;
x.shadowCameraBottom=C.shadowCameraBottom;x.shadowCameraTop=C.shadowCameraTop;x.shadowCameraVisible=C.shadowCameraVisible;x.shadowDarkness=C.shadowDarkness;x.shadowBias=C.shadowCascadeBias[s];x.shadowMapWidth=C.shadowCascadeWidth[s];x.shadowMapHeight=C.shadowCascadeHeight[s];x.pointsWorld=[];x.pointsFrustum=[];B=x.pointsWorld;i=x.pointsFrustum;for(var M=0;8>M;M++)B[M]=new THREE.Vector3,i[M]=new THREE.Vector3;B=C.shadowCascadeNearZ[s];C=C.shadowCascadeFarZ[s];i[0].set(-1,-1,B);i[1].set(1,-1,B);i[2].set(-1,
1,B);i[3].set(1,1,B);i[4].set(-1,-1,C);i[5].set(1,-1,C);i[6].set(-1,1,C);i[7].set(1,1,C);x.originalCamera=z;i=new THREE.Gyroscope;i.position=n.shadowCascadeOffset;i.add(x);i.add(x.target);z.add(i);n.shadowCascadeArray[l]=x;console.log("Created virtualLight",x)}s=n;B=l;C=s.shadowCascadeArray[B];C.position.copy(s.position);C.target.position.copy(s.target.position);C.lookAt(C.target);C.shadowCameraVisible=s.shadowCameraVisible;C.shadowDarkness=s.shadowDarkness;C.shadowBias=s.shadowCascadeBias[B];i=s.shadowCascadeNearZ[B];
s=s.shadowCascadeFarZ[B];C=C.pointsFrustum;C[0].z=i;C[1].z=i;C[2].z=i;C[3].z=i;C[4].z=s;C[5].z=s;C[6].z=s;C[7].z=s;G[p]=x;p++}else G[p]=n,p++;u=0;for(r=G.length;u<r;u++){n=G[u];n.shadowMap||(l=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(l=THREE.NearestFilter),n.shadowMap=new THREE.WebGLRenderTarget(n.shadowMapWidth,n.shadowMapHeight,{minFilter:l,magFilter:l,format:THREE.RGBAFormat}),n.shadowMapSize=new THREE.Vector2(n.shadowMapWidth,n.shadowMapHeight),n.shadowMatrix=new THREE.Matrix4);
if(!n.shadowCamera){if(n instanceof THREE.SpotLight)n.shadowCamera=new THREE.PerspectiveCamera(n.shadowCameraFov,n.shadowMapWidth/n.shadowMapHeight,n.shadowCameraNear,n.shadowCameraFar);else if(n instanceof THREE.DirectionalLight)n.shadowCamera=new THREE.OrthographicCamera(n.shadowCameraLeft,n.shadowCameraRight,n.shadowCameraTop,n.shadowCameraBottom,n.shadowCameraNear,n.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}t.add(n.shadowCamera);!0===t.autoUpdate&&t.updateMatrixWorld()}n.shadowCameraVisible&&
!n.cameraHelper&&(n.cameraHelper=new THREE.CameraHelper(n.shadowCamera),n.shadowCamera.add(n.cameraHelper));if(n.isVirtual&&x.originalCamera==z){l=z;p=n.shadowCamera;i=n.pointsFrustum;C=n.pointsWorld;k.set(Infinity,Infinity,Infinity);m.set(-Infinity,-Infinity,-Infinity);for(s=0;8>s;s++)B=C[s],B.copy(i[s]),THREE.ShadowMapPlugin.__projector.unprojectVector(B,l),B.applyMatrix4(p.matrixWorldInverse),B.x<k.x&&(k.x=B.x),B.x>m.x&&(m.x=B.x),B.y<k.y&&(k.y=B.y),B.y>m.y&&(m.y=B.y),B.z<k.z&&(k.z=B.z),B.z>m.z&&
(m.z=B.z);p.left=k.x;p.right=m.x;p.top=m.y;p.bottom=k.y;p.updateProjectionMatrix()}p=n.shadowMap;i=n.shadowMatrix;l=n.shadowCamera;l.position.setFromMatrixPosition(n.matrixWorld);q.setFromMatrixPosition(n.target.matrixWorld);l.lookAt(q);l.updateMatrixWorld();l.matrixWorldInverse.getInverse(l.matrixWorld);n.cameraHelper&&(n.cameraHelper.visible=n.shadowCameraVisible);n.shadowCameraVisible&&n.cameraHelper.update();i.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);i.multiply(l.projectionMatrix);i.multiply(l.matrixWorldInverse);
j.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse);h.setFromMatrix(j);b.setRenderTarget(p);b.clear();C=t.__webglObjects;n=0;for(p=C.length;n<p;n++)if(s=C[n],i=s.object,s.render=!1,i.visible&&i.castShadow&&(!(i instanceof THREE.Mesh||i instanceof THREE.ParticleSystem)||!i.frustumCulled||h.intersectsObject(i)))i._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,i.matrixWorld),s.render=!0;n=0;for(p=C.length;n<p;n++)s=C[n],s.render&&(i=s.object,s=s.buffer,M=i.material instanceof THREE.MeshFaceMaterial?
i.material.materials[0]:i.material,B=0<i.geometry.morphTargets.length&&M.morphTargets,M=i instanceof THREE.SkinnedMesh&&M.skinning,B=i.customDepthMaterial?i.customDepthMaterial:M?B?f:e:B?d:c,s instanceof THREE.BufferGeometry?b.renderBufferDirect(l,t.__lights,null,B,s,i):b.renderBuffer(l,t.__lights,null,B,s,i));C=t.__webglObjectsImmediate;n=0;for(p=C.length;n<p;n++)s=C[n],i=s.object,i.visible&&i.castShadow&&(i._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,i.matrixWorld),b.renderImmediateObject(l,
t.__lights,null,c,i))}u=b.getClearColor();r=b.getClearAlpha();a.clearColor(u.r,u.g,u.b,r);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){var a,b,c,d,e,f,h,j,k,m,q,t,z,u,r,n,p;function l(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var i,s,B,C,G,x,M,y;this.init=function(l){i=l.context;s=l;C=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);G=new Uint16Array([0,1,2,0,2,3]);x=i.createBuffer();M=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,x);i.bufferData(i.ARRAY_BUFFER,C,i.STATIC_DRAW);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,M);i.bufferData(i.ELEMENT_ARRAY_BUFFER,G,i.STATIC_DRAW);var l=i.createProgram(),
K=i.createShader(i.VERTEX_SHADER),w=i.createShader(i.FRAGMENT_SHADER);i.shaderSource(K,["precision "+s.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
i.shaderSource(w,["precision "+s.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
i.compileShader(K);i.compileShader(w);i.attachShader(l,K);i.attachShader(l,w);i.linkProgram(l);y=l;n=i.getAttribLocation(y,"position");p=i.getAttribLocation(y,"uv");a=i.getUniformLocation(y,"uvOffset");b=i.getUniformLocation(y,"uvScale");c=i.getUniformLocation(y,"rotation");d=i.getUniformLocation(y,"scale");e=i.getUniformLocation(y,"color");f=i.getUniformLocation(y,"map");h=i.getUniformLocation(y,"opacity");j=i.getUniformLocation(y,"modelViewMatrix");k=i.getUniformLocation(y,"projectionMatrix");m=
i.getUniformLocation(y,"fogType");q=i.getUniformLocation(y,"fogDensity");t=i.getUniformLocation(y,"fogNear");z=i.getUniformLocation(y,"fogFar");u=i.getUniformLocation(y,"fogColor");r=i.getUniformLocation(y,"alphaTest");l=document.createElement("canvas");l.width=8;l.height=8;K=l.getContext("2d");K.fillStyle="#ffffff";K.fillRect(0,0,l.width,l.height);B=new THREE.Texture(l);B.needsUpdate=!0};this.render=function(C,K){var w=C.__webglSprites,N=w.length;if(N){i.useProgram(y);i.enableVertexAttribArray(n);
i.enableVertexAttribArray(p);i.disable(i.CULL_FACE);i.enable(i.BLEND);i.bindBuffer(i.ARRAY_BUFFER,x);i.vertexAttribPointer(n,2,i.FLOAT,!1,16,0);i.vertexAttribPointer(p,2,i.FLOAT,!1,16,8);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,M);i.uniformMatrix4fv(k,!1,K.projectionMatrix.elements);i.activeTexture(i.TEXTURE0);i.uniform1i(f,0);var D=0,L=0,v=C.fog;v?(i.uniform3f(u,v.color.r,v.color.g,v.color.b),v instanceof THREE.Fog?(i.uniform1f(t,v.near),i.uniform1f(z,v.far),i.uniform1i(m,1),L=D=1):v instanceof THREE.FogExp2&&
(i.uniform1f(q,v.density),i.uniform1i(m,2),L=D=2)):(i.uniform1i(m,0),L=D=0);for(var F,G,ta=[],v=0;v<N;v++)F=w[v],!1!==F.visible&&(F._modelViewMatrix.multiplyMatrices(K.matrixWorldInverse,F.matrixWorld),F.z=-F._modelViewMatrix.elements[14]);w.sort(l);for(v=0;v<N;v++)F=w[v],!1!==F.visible&&(G=F.material,i.uniform1f(r,G.alphaTest),i.uniformMatrix4fv(j,!1,F._modelViewMatrix.elements),ta[0]=F.scale.x,ta[1]=F.scale.y,F=C.fog&&G.fog?L:0,D!==F&&(i.uniform1i(m,F),D=F),null!==G.map?(i.uniform2f(a,G.map.offset.x,
G.map.offset.y),i.uniform2f(b,G.map.repeat.x,G.map.repeat.y)):(i.uniform2f(a,0,0),i.uniform2f(b,1,1)),i.uniform1f(h,G.opacity),i.uniform3f(e,G.color.r,G.color.g,G.color.b),i.uniform1f(c,G.rotation),i.uniform2fv(d,ta),s.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst),s.setDepthTest(G.depthTest),s.setDepthWrite(G.depthWrite),G.map&&G.map.image&&G.map.image.width?s.setTexture(G.map,0):s.setTexture(B,0),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0));i.enable(i.CULL_FACE)}}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
